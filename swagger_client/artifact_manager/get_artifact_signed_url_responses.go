// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package artifact_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetArtifactSignedURLReader is a Reader for the GetArtifactSignedURL structure.
type GetArtifactSignedURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactSignedURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactSignedURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 307:
		result := NewGetArtifactSignedURLTemporaryRedirect()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetArtifactSignedURLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArtifactSignedURLUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArtifactSignedURLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactSignedURLInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetArtifactSignedURLGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArtifactSignedURLOK creates a GetArtifactSignedURLOK with default headers values
func NewGetArtifactSignedURLOK() *GetArtifactSignedURLOK {
	return &GetArtifactSignedURLOK{}
}

/* GetArtifactSignedURLOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetArtifactSignedURLOK struct {
	Payload *swagger_models.Artifact
}

func (o *GetArtifactSignedURLOK) Error() string {
	return fmt.Sprintf("[GET /v1/artifacts/id/{id}/url][%d] getArtifactSignedUrlOK  %+v", 200, o.Payload)
}
func (o *GetArtifactSignedURLOK) GetPayload() *swagger_models.Artifact {
	return o.Payload
}

func (o *GetArtifactSignedURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.Artifact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactSignedURLTemporaryRedirect creates a GetArtifactSignedURLTemporaryRedirect with default headers values
func NewGetArtifactSignedURLTemporaryRedirect() *GetArtifactSignedURLTemporaryRedirect {
	return &GetArtifactSignedURLTemporaryRedirect{}
}

/* GetArtifactSignedURLTemporaryRedirect describes a response with status code 307, with default header values.

Temporary Redirect. Returned when the requested artifactId is not available at the requested time
*/
type GetArtifactSignedURLTemporaryRedirect struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetArtifactSignedURLTemporaryRedirect) Error() string {
	return fmt.Sprintf("[GET /v1/artifacts/id/{id}/url][%d] getArtifactSignedUrlTemporaryRedirect  %+v", 307, o.Payload)
}
func (o *GetArtifactSignedURLTemporaryRedirect) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetArtifactSignedURLTemporaryRedirect) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactSignedURLBadRequest creates a GetArtifactSignedURLBadRequest with default headers values
func NewGetArtifactSignedURLBadRequest() *GetArtifactSignedURLBadRequest {
	return &GetArtifactSignedURLBadRequest{}
}

/* GetArtifactSignedURLBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of parameters.
*/
type GetArtifactSignedURLBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetArtifactSignedURLBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/artifacts/id/{id}/url][%d] getArtifactSignedUrlBadRequest  %+v", 400, o.Payload)
}
func (o *GetArtifactSignedURLBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetArtifactSignedURLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactSignedURLUnauthorized creates a GetArtifactSignedURLUnauthorized with default headers values
func NewGetArtifactSignedURLUnauthorized() *GetArtifactSignedURLUnauthorized {
	return &GetArtifactSignedURLUnauthorized{}
}

/* GetArtifactSignedURLUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetArtifactSignedURLUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetArtifactSignedURLUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/artifacts/id/{id}/url][%d] getArtifactSignedUrlUnauthorized  %+v", 401, o.Payload)
}
func (o *GetArtifactSignedURLUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetArtifactSignedURLUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactSignedURLForbidden creates a GetArtifactSignedURLForbidden with default headers values
func NewGetArtifactSignedURLForbidden() *GetArtifactSignedURLForbidden {
	return &GetArtifactSignedURLForbidden{}
}

/* GetArtifactSignedURLForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetArtifactSignedURLForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetArtifactSignedURLForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/artifacts/id/{id}/url][%d] getArtifactSignedUrlForbidden  %+v", 403, o.Payload)
}
func (o *GetArtifactSignedURLForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetArtifactSignedURLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactSignedURLInternalServerError creates a GetArtifactSignedURLInternalServerError with default headers values
func NewGetArtifactSignedURLInternalServerError() *GetArtifactSignedURLInternalServerError {
	return &GetArtifactSignedURLInternalServerError{}
}

/* GetArtifactSignedURLInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetArtifactSignedURLInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetArtifactSignedURLInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/artifacts/id/{id}/url][%d] getArtifactSignedUrlInternalServerError  %+v", 500, o.Payload)
}
func (o *GetArtifactSignedURLInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetArtifactSignedURLInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactSignedURLGatewayTimeout creates a GetArtifactSignedURLGatewayTimeout with default headers values
func NewGetArtifactSignedURLGatewayTimeout() *GetArtifactSignedURLGatewayTimeout {
	return &GetArtifactSignedURLGatewayTimeout{}
}

/* GetArtifactSignedURLGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetArtifactSignedURLGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetArtifactSignedURLGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/artifacts/id/{id}/url][%d] getArtifactSignedUrlGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetArtifactSignedURLGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetArtifactSignedURLGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

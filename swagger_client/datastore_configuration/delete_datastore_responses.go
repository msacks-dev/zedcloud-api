// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package datastore_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// DeleteDatastoreReader is a Reader for the DeleteDatastore structure.
type DeleteDatastoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDatastoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDatastoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteDatastoreUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDatastoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDatastoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteDatastoreConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDatastoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteDatastoreGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDatastoreOK creates a DeleteDatastoreOK with default headers values
func NewDeleteDatastoreOK() *DeleteDatastoreOK {
	return &DeleteDatastoreOK{}
}

/* DeleteDatastoreOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteDatastoreOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteDatastoreOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/datastores/id/{id}][%d] deleteDatastoreOK  %+v", 200, o.Payload)
}
func (o *DeleteDatastoreOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteDatastoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatastoreUnauthorized creates a DeleteDatastoreUnauthorized with default headers values
func NewDeleteDatastoreUnauthorized() *DeleteDatastoreUnauthorized {
	return &DeleteDatastoreUnauthorized{}
}

/* DeleteDatastoreUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type DeleteDatastoreUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteDatastoreUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/datastores/id/{id}][%d] deleteDatastoreUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteDatastoreUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteDatastoreUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatastoreForbidden creates a DeleteDatastoreForbidden with default headers values
func NewDeleteDatastoreForbidden() *DeleteDatastoreForbidden {
	return &DeleteDatastoreForbidden{}
}

/* DeleteDatastoreForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type DeleteDatastoreForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteDatastoreForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/datastores/id/{id}][%d] deleteDatastoreForbidden  %+v", 403, o.Payload)
}
func (o *DeleteDatastoreForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteDatastoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatastoreNotFound creates a DeleteDatastoreNotFound with default headers values
func NewDeleteDatastoreNotFound() *DeleteDatastoreNotFound {
	return &DeleteDatastoreNotFound{}
}

/* DeleteDatastoreNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type DeleteDatastoreNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteDatastoreNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/datastores/id/{id}][%d] deleteDatastoreNotFound  %+v", 404, o.Payload)
}
func (o *DeleteDatastoreNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteDatastoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatastoreConflict creates a DeleteDatastoreConflict with default headers values
func NewDeleteDatastoreConflict() *DeleteDatastoreConflict {
	return &DeleteDatastoreConflict{}
}

/* DeleteDatastoreConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because there are edge application images using this datastore
*/
type DeleteDatastoreConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteDatastoreConflict) Error() string {
	return fmt.Sprintf("[DELETE /v1/datastores/id/{id}][%d] deleteDatastoreConflict  %+v", 409, o.Payload)
}
func (o *DeleteDatastoreConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteDatastoreConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatastoreInternalServerError creates a DeleteDatastoreInternalServerError with default headers values
func NewDeleteDatastoreInternalServerError() *DeleteDatastoreInternalServerError {
	return &DeleteDatastoreInternalServerError{}
}

/* DeleteDatastoreInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type DeleteDatastoreInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteDatastoreInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/datastores/id/{id}][%d] deleteDatastoreInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteDatastoreInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteDatastoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatastoreGatewayTimeout creates a DeleteDatastoreGatewayTimeout with default headers values
func NewDeleteDatastoreGatewayTimeout() *DeleteDatastoreGatewayTimeout {
	return &DeleteDatastoreGatewayTimeout{}
}

/* DeleteDatastoreGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type DeleteDatastoreGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteDatastoreGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/datastores/id/{id}][%d] deleteDatastoreGatewayTimeout  %+v", 504, o.Payload)
}
func (o *DeleteDatastoreGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteDatastoreGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

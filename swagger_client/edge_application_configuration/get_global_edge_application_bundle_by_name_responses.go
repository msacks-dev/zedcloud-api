// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetGlobalEdgeApplicationBundleByNameReader is a Reader for the GetGlobalEdgeApplicationBundleByName structure.
type GetGlobalEdgeApplicationBundleByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGlobalEdgeApplicationBundleByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGlobalEdgeApplicationBundleByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGlobalEdgeApplicationBundleByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGlobalEdgeApplicationBundleByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGlobalEdgeApplicationBundleByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGlobalEdgeApplicationBundleByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetGlobalEdgeApplicationBundleByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGlobalEdgeApplicationBundleByNameOK creates a GetGlobalEdgeApplicationBundleByNameOK with default headers values
func NewGetGlobalEdgeApplicationBundleByNameOK() *GetGlobalEdgeApplicationBundleByNameOK {
	return &GetGlobalEdgeApplicationBundleByNameOK{}
}

/* GetGlobalEdgeApplicationBundleByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetGlobalEdgeApplicationBundleByNameOK struct {
	Payload *swagger_models.App
}

func (o *GetGlobalEdgeApplicationBundleByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] getGlobalEdgeApplicationBundleByNameOK  %+v", 200, o.Payload)
}
func (o *GetGlobalEdgeApplicationBundleByNameOK) GetPayload() *swagger_models.App {
	return o.Payload
}

func (o *GetGlobalEdgeApplicationBundleByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalEdgeApplicationBundleByNameUnauthorized creates a GetGlobalEdgeApplicationBundleByNameUnauthorized with default headers values
func NewGetGlobalEdgeApplicationBundleByNameUnauthorized() *GetGlobalEdgeApplicationBundleByNameUnauthorized {
	return &GetGlobalEdgeApplicationBundleByNameUnauthorized{}
}

/* GetGlobalEdgeApplicationBundleByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetGlobalEdgeApplicationBundleByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetGlobalEdgeApplicationBundleByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] getGlobalEdgeApplicationBundleByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetGlobalEdgeApplicationBundleByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetGlobalEdgeApplicationBundleByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalEdgeApplicationBundleByNameForbidden creates a GetGlobalEdgeApplicationBundleByNameForbidden with default headers values
func NewGetGlobalEdgeApplicationBundleByNameForbidden() *GetGlobalEdgeApplicationBundleByNameForbidden {
	return &GetGlobalEdgeApplicationBundleByNameForbidden{}
}

/* GetGlobalEdgeApplicationBundleByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type GetGlobalEdgeApplicationBundleByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetGlobalEdgeApplicationBundleByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] getGlobalEdgeApplicationBundleByNameForbidden  %+v", 403, o.Payload)
}
func (o *GetGlobalEdgeApplicationBundleByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetGlobalEdgeApplicationBundleByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalEdgeApplicationBundleByNameNotFound creates a GetGlobalEdgeApplicationBundleByNameNotFound with default headers values
func NewGetGlobalEdgeApplicationBundleByNameNotFound() *GetGlobalEdgeApplicationBundleByNameNotFound {
	return &GetGlobalEdgeApplicationBundleByNameNotFound{}
}

/* GetGlobalEdgeApplicationBundleByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetGlobalEdgeApplicationBundleByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetGlobalEdgeApplicationBundleByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] getGlobalEdgeApplicationBundleByNameNotFound  %+v", 404, o.Payload)
}
func (o *GetGlobalEdgeApplicationBundleByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetGlobalEdgeApplicationBundleByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalEdgeApplicationBundleByNameInternalServerError creates a GetGlobalEdgeApplicationBundleByNameInternalServerError with default headers values
func NewGetGlobalEdgeApplicationBundleByNameInternalServerError() *GetGlobalEdgeApplicationBundleByNameInternalServerError {
	return &GetGlobalEdgeApplicationBundleByNameInternalServerError{}
}

/* GetGlobalEdgeApplicationBundleByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetGlobalEdgeApplicationBundleByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetGlobalEdgeApplicationBundleByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] getGlobalEdgeApplicationBundleByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetGlobalEdgeApplicationBundleByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetGlobalEdgeApplicationBundleByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalEdgeApplicationBundleByNameGatewayTimeout creates a GetGlobalEdgeApplicationBundleByNameGatewayTimeout with default headers values
func NewGetGlobalEdgeApplicationBundleByNameGatewayTimeout() *GetGlobalEdgeApplicationBundleByNameGatewayTimeout {
	return &GetGlobalEdgeApplicationBundleByNameGatewayTimeout{}
}

/* GetGlobalEdgeApplicationBundleByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetGlobalEdgeApplicationBundleByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetGlobalEdgeApplicationBundleByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global/name/{name}][%d] getGlobalEdgeApplicationBundleByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetGlobalEdgeApplicationBundleByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetGlobalEdgeApplicationBundleByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// QueryGlobalEdgeApplicationBundlesReader is a Reader for the QueryGlobalEdgeApplicationBundles structure.
type QueryGlobalEdgeApplicationBundlesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryGlobalEdgeApplicationBundlesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryGlobalEdgeApplicationBundlesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewQueryGlobalEdgeApplicationBundlesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewQueryGlobalEdgeApplicationBundlesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewQueryGlobalEdgeApplicationBundlesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewQueryGlobalEdgeApplicationBundlesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewQueryGlobalEdgeApplicationBundlesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewQueryGlobalEdgeApplicationBundlesOK creates a QueryGlobalEdgeApplicationBundlesOK with default headers values
func NewQueryGlobalEdgeApplicationBundlesOK() *QueryGlobalEdgeApplicationBundlesOK {
	return &QueryGlobalEdgeApplicationBundlesOK{}
}

/* QueryGlobalEdgeApplicationBundlesOK describes a response with status code 200, with default header values.

A successful response.
*/
type QueryGlobalEdgeApplicationBundlesOK struct {
	Payload *swagger_models.Apps
}

func (o *QueryGlobalEdgeApplicationBundlesOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global][%d] queryGlobalEdgeApplicationBundlesOK  %+v", 200, o.Payload)
}
func (o *QueryGlobalEdgeApplicationBundlesOK) GetPayload() *swagger_models.Apps {
	return o.Payload
}

func (o *QueryGlobalEdgeApplicationBundlesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.Apps)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryGlobalEdgeApplicationBundlesBadRequest creates a QueryGlobalEdgeApplicationBundlesBadRequest with default headers values
func NewQueryGlobalEdgeApplicationBundlesBadRequest() *QueryGlobalEdgeApplicationBundlesBadRequest {
	return &QueryGlobalEdgeApplicationBundlesBadRequest{}
}

/* QueryGlobalEdgeApplicationBundlesBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type QueryGlobalEdgeApplicationBundlesBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryGlobalEdgeApplicationBundlesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global][%d] queryGlobalEdgeApplicationBundlesBadRequest  %+v", 400, o.Payload)
}
func (o *QueryGlobalEdgeApplicationBundlesBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryGlobalEdgeApplicationBundlesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryGlobalEdgeApplicationBundlesUnauthorized creates a QueryGlobalEdgeApplicationBundlesUnauthorized with default headers values
func NewQueryGlobalEdgeApplicationBundlesUnauthorized() *QueryGlobalEdgeApplicationBundlesUnauthorized {
	return &QueryGlobalEdgeApplicationBundlesUnauthorized{}
}

/* QueryGlobalEdgeApplicationBundlesUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type QueryGlobalEdgeApplicationBundlesUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryGlobalEdgeApplicationBundlesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global][%d] queryGlobalEdgeApplicationBundlesUnauthorized  %+v", 401, o.Payload)
}
func (o *QueryGlobalEdgeApplicationBundlesUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryGlobalEdgeApplicationBundlesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryGlobalEdgeApplicationBundlesForbidden creates a QueryGlobalEdgeApplicationBundlesForbidden with default headers values
func NewQueryGlobalEdgeApplicationBundlesForbidden() *QueryGlobalEdgeApplicationBundlesForbidden {
	return &QueryGlobalEdgeApplicationBundlesForbidden{}
}

/* QueryGlobalEdgeApplicationBundlesForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type QueryGlobalEdgeApplicationBundlesForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryGlobalEdgeApplicationBundlesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global][%d] queryGlobalEdgeApplicationBundlesForbidden  %+v", 403, o.Payload)
}
func (o *QueryGlobalEdgeApplicationBundlesForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryGlobalEdgeApplicationBundlesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryGlobalEdgeApplicationBundlesInternalServerError creates a QueryGlobalEdgeApplicationBundlesInternalServerError with default headers values
func NewQueryGlobalEdgeApplicationBundlesInternalServerError() *QueryGlobalEdgeApplicationBundlesInternalServerError {
	return &QueryGlobalEdgeApplicationBundlesInternalServerError{}
}

/* QueryGlobalEdgeApplicationBundlesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type QueryGlobalEdgeApplicationBundlesInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryGlobalEdgeApplicationBundlesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global][%d] queryGlobalEdgeApplicationBundlesInternalServerError  %+v", 500, o.Payload)
}
func (o *QueryGlobalEdgeApplicationBundlesInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryGlobalEdgeApplicationBundlesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryGlobalEdgeApplicationBundlesGatewayTimeout creates a QueryGlobalEdgeApplicationBundlesGatewayTimeout with default headers values
func NewQueryGlobalEdgeApplicationBundlesGatewayTimeout() *QueryGlobalEdgeApplicationBundlesGatewayTimeout {
	return &QueryGlobalEdgeApplicationBundlesGatewayTimeout{}
}

/* QueryGlobalEdgeApplicationBundlesGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type QueryGlobalEdgeApplicationBundlesGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryGlobalEdgeApplicationBundlesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/global][%d] queryGlobalEdgeApplicationBundlesGatewayTimeout  %+v", 504, o.Payload)
}
func (o *QueryGlobalEdgeApplicationBundlesGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryGlobalEdgeApplicationBundlesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

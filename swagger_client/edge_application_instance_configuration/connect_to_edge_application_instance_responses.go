// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_instance_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// ConnectToEdgeApplicationInstanceReader is a Reader for the ConnectToEdgeApplicationInstance structure.
type ConnectToEdgeApplicationInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectToEdgeApplicationInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectToEdgeApplicationInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewConnectToEdgeApplicationInstanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewConnectToEdgeApplicationInstanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConnectToEdgeApplicationInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewConnectToEdgeApplicationInstanceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewConnectToEdgeApplicationInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewConnectToEdgeApplicationInstanceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewConnectToEdgeApplicationInstanceOK creates a ConnectToEdgeApplicationInstanceOK with default headers values
func NewConnectToEdgeApplicationInstanceOK() *ConnectToEdgeApplicationInstanceOK {
	return &ConnectToEdgeApplicationInstanceOK{}
}

/* ConnectToEdgeApplicationInstanceOK describes a response with status code 200, with default header values.

A successful response.
*/
type ConnectToEdgeApplicationInstanceOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ConnectToEdgeApplicationInstanceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/console/remote][%d] connectToEdgeApplicationInstanceOK  %+v", 200, o.Payload)
}
func (o *ConnectToEdgeApplicationInstanceOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ConnectToEdgeApplicationInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectToEdgeApplicationInstanceUnauthorized creates a ConnectToEdgeApplicationInstanceUnauthorized with default headers values
func NewConnectToEdgeApplicationInstanceUnauthorized() *ConnectToEdgeApplicationInstanceUnauthorized {
	return &ConnectToEdgeApplicationInstanceUnauthorized{}
}

/* ConnectToEdgeApplicationInstanceUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ConnectToEdgeApplicationInstanceUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ConnectToEdgeApplicationInstanceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/console/remote][%d] connectToEdgeApplicationInstanceUnauthorized  %+v", 401, o.Payload)
}
func (o *ConnectToEdgeApplicationInstanceUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ConnectToEdgeApplicationInstanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectToEdgeApplicationInstanceForbidden creates a ConnectToEdgeApplicationInstanceForbidden with default headers values
func NewConnectToEdgeApplicationInstanceForbidden() *ConnectToEdgeApplicationInstanceForbidden {
	return &ConnectToEdgeApplicationInstanceForbidden{}
}

/* ConnectToEdgeApplicationInstanceForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type ConnectToEdgeApplicationInstanceForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ConnectToEdgeApplicationInstanceForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/console/remote][%d] connectToEdgeApplicationInstanceForbidden  %+v", 403, o.Payload)
}
func (o *ConnectToEdgeApplicationInstanceForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ConnectToEdgeApplicationInstanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectToEdgeApplicationInstanceNotFound creates a ConnectToEdgeApplicationInstanceNotFound with default headers values
func NewConnectToEdgeApplicationInstanceNotFound() *ConnectToEdgeApplicationInstanceNotFound {
	return &ConnectToEdgeApplicationInstanceNotFound{}
}

/* ConnectToEdgeApplicationInstanceNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ConnectToEdgeApplicationInstanceNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ConnectToEdgeApplicationInstanceNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/console/remote][%d] connectToEdgeApplicationInstanceNotFound  %+v", 404, o.Payload)
}
func (o *ConnectToEdgeApplicationInstanceNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ConnectToEdgeApplicationInstanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectToEdgeApplicationInstanceConflict creates a ConnectToEdgeApplicationInstanceConflict with default headers values
func NewConnectToEdgeApplicationInstanceConflict() *ConnectToEdgeApplicationInstanceConflict {
	return &ConnectToEdgeApplicationInstanceConflict{}
}

/* ConnectToEdgeApplicationInstanceConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.
*/
type ConnectToEdgeApplicationInstanceConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ConnectToEdgeApplicationInstanceConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/console/remote][%d] connectToEdgeApplicationInstanceConflict  %+v", 409, o.Payload)
}
func (o *ConnectToEdgeApplicationInstanceConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ConnectToEdgeApplicationInstanceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectToEdgeApplicationInstanceInternalServerError creates a ConnectToEdgeApplicationInstanceInternalServerError with default headers values
func NewConnectToEdgeApplicationInstanceInternalServerError() *ConnectToEdgeApplicationInstanceInternalServerError {
	return &ConnectToEdgeApplicationInstanceInternalServerError{}
}

/* ConnectToEdgeApplicationInstanceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ConnectToEdgeApplicationInstanceInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ConnectToEdgeApplicationInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/console/remote][%d] connectToEdgeApplicationInstanceInternalServerError  %+v", 500, o.Payload)
}
func (o *ConnectToEdgeApplicationInstanceInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ConnectToEdgeApplicationInstanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectToEdgeApplicationInstanceGatewayTimeout creates a ConnectToEdgeApplicationInstanceGatewayTimeout with default headers values
func NewConnectToEdgeApplicationInstanceGatewayTimeout() *ConnectToEdgeApplicationInstanceGatewayTimeout {
	return &ConnectToEdgeApplicationInstanceGatewayTimeout{}
}

/* ConnectToEdgeApplicationInstanceGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ConnectToEdgeApplicationInstanceGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *ConnectToEdgeApplicationInstanceGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/console/remote][%d] connectToEdgeApplicationInstanceGatewayTimeout  %+v", 504, o.Payload)
}
func (o *ConnectToEdgeApplicationInstanceGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *ConnectToEdgeApplicationInstanceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_instance_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetEdgeApplicationInstanceByNameReader is a Reader for the GetEdgeApplicationInstanceByName structure.
type GetEdgeApplicationInstanceByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEdgeApplicationInstanceByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEdgeApplicationInstanceByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEdgeApplicationInstanceByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEdgeApplicationInstanceByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEdgeApplicationInstanceByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEdgeApplicationInstanceByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetEdgeApplicationInstanceByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEdgeApplicationInstanceByNameOK creates a GetEdgeApplicationInstanceByNameOK with default headers values
func NewGetEdgeApplicationInstanceByNameOK() *GetEdgeApplicationInstanceByNameOK {
	return &GetEdgeApplicationInstanceByNameOK{}
}

/* GetEdgeApplicationInstanceByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetEdgeApplicationInstanceByNameOK struct {
	Payload *swagger_models.AppInstance
}

func (o *GetEdgeApplicationInstanceByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}][%d] getEdgeApplicationInstanceByNameOK  %+v", 200, o.Payload)
}
func (o *GetEdgeApplicationInstanceByNameOK) GetPayload() *swagger_models.AppInstance {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.AppInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceByNameUnauthorized creates a GetEdgeApplicationInstanceByNameUnauthorized with default headers values
func NewGetEdgeApplicationInstanceByNameUnauthorized() *GetEdgeApplicationInstanceByNameUnauthorized {
	return &GetEdgeApplicationInstanceByNameUnauthorized{}
}

/* GetEdgeApplicationInstanceByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetEdgeApplicationInstanceByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}][%d] getEdgeApplicationInstanceByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetEdgeApplicationInstanceByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceByNameForbidden creates a GetEdgeApplicationInstanceByNameForbidden with default headers values
func NewGetEdgeApplicationInstanceByNameForbidden() *GetEdgeApplicationInstanceByNameForbidden {
	return &GetEdgeApplicationInstanceByNameForbidden{}
}

/* GetEdgeApplicationInstanceByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type GetEdgeApplicationInstanceByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}][%d] getEdgeApplicationInstanceByNameForbidden  %+v", 403, o.Payload)
}
func (o *GetEdgeApplicationInstanceByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceByNameNotFound creates a GetEdgeApplicationInstanceByNameNotFound with default headers values
func NewGetEdgeApplicationInstanceByNameNotFound() *GetEdgeApplicationInstanceByNameNotFound {
	return &GetEdgeApplicationInstanceByNameNotFound{}
}

/* GetEdgeApplicationInstanceByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetEdgeApplicationInstanceByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}][%d] getEdgeApplicationInstanceByNameNotFound  %+v", 404, o.Payload)
}
func (o *GetEdgeApplicationInstanceByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceByNameInternalServerError creates a GetEdgeApplicationInstanceByNameInternalServerError with default headers values
func NewGetEdgeApplicationInstanceByNameInternalServerError() *GetEdgeApplicationInstanceByNameInternalServerError {
	return &GetEdgeApplicationInstanceByNameInternalServerError{}
}

/* GetEdgeApplicationInstanceByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetEdgeApplicationInstanceByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}][%d] getEdgeApplicationInstanceByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetEdgeApplicationInstanceByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceByNameGatewayTimeout creates a GetEdgeApplicationInstanceByNameGatewayTimeout with default headers values
func NewGetEdgeApplicationInstanceByNameGatewayTimeout() *GetEdgeApplicationInstanceByNameGatewayTimeout {
	return &GetEdgeApplicationInstanceByNameGatewayTimeout{}
}

/* GetEdgeApplicationInstanceByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetEdgeApplicationInstanceByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}][%d] getEdgeApplicationInstanceByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetEdgeApplicationInstanceByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

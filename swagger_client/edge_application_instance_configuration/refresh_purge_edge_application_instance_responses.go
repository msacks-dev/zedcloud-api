// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_instance_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// RefreshPurgeEdgeApplicationInstanceReader is a Reader for the RefreshPurgeEdgeApplicationInstance structure.
type RefreshPurgeEdgeApplicationInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RefreshPurgeEdgeApplicationInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRefreshPurgeEdgeApplicationInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRefreshPurgeEdgeApplicationInstanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRefreshPurgeEdgeApplicationInstanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRefreshPurgeEdgeApplicationInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRefreshPurgeEdgeApplicationInstanceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRefreshPurgeEdgeApplicationInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewRefreshPurgeEdgeApplicationInstanceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRefreshPurgeEdgeApplicationInstanceOK creates a RefreshPurgeEdgeApplicationInstanceOK with default headers values
func NewRefreshPurgeEdgeApplicationInstanceOK() *RefreshPurgeEdgeApplicationInstanceOK {
	return &RefreshPurgeEdgeApplicationInstanceOK{}
}

/* RefreshPurgeEdgeApplicationInstanceOK describes a response with status code 200, with default header values.

A successful response.
*/
type RefreshPurgeEdgeApplicationInstanceOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RefreshPurgeEdgeApplicationInstanceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/refresh/purge][%d] refreshPurgeEdgeApplicationInstanceOK  %+v", 200, o.Payload)
}
func (o *RefreshPurgeEdgeApplicationInstanceOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RefreshPurgeEdgeApplicationInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshPurgeEdgeApplicationInstanceUnauthorized creates a RefreshPurgeEdgeApplicationInstanceUnauthorized with default headers values
func NewRefreshPurgeEdgeApplicationInstanceUnauthorized() *RefreshPurgeEdgeApplicationInstanceUnauthorized {
	return &RefreshPurgeEdgeApplicationInstanceUnauthorized{}
}

/* RefreshPurgeEdgeApplicationInstanceUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type RefreshPurgeEdgeApplicationInstanceUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RefreshPurgeEdgeApplicationInstanceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/refresh/purge][%d] refreshPurgeEdgeApplicationInstanceUnauthorized  %+v", 401, o.Payload)
}
func (o *RefreshPurgeEdgeApplicationInstanceUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RefreshPurgeEdgeApplicationInstanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshPurgeEdgeApplicationInstanceForbidden creates a RefreshPurgeEdgeApplicationInstanceForbidden with default headers values
func NewRefreshPurgeEdgeApplicationInstanceForbidden() *RefreshPurgeEdgeApplicationInstanceForbidden {
	return &RefreshPurgeEdgeApplicationInstanceForbidden{}
}

/* RefreshPurgeEdgeApplicationInstanceForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type RefreshPurgeEdgeApplicationInstanceForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RefreshPurgeEdgeApplicationInstanceForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/refresh/purge][%d] refreshPurgeEdgeApplicationInstanceForbidden  %+v", 403, o.Payload)
}
func (o *RefreshPurgeEdgeApplicationInstanceForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RefreshPurgeEdgeApplicationInstanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshPurgeEdgeApplicationInstanceNotFound creates a RefreshPurgeEdgeApplicationInstanceNotFound with default headers values
func NewRefreshPurgeEdgeApplicationInstanceNotFound() *RefreshPurgeEdgeApplicationInstanceNotFound {
	return &RefreshPurgeEdgeApplicationInstanceNotFound{}
}

/* RefreshPurgeEdgeApplicationInstanceNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type RefreshPurgeEdgeApplicationInstanceNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RefreshPurgeEdgeApplicationInstanceNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/refresh/purge][%d] refreshPurgeEdgeApplicationInstanceNotFound  %+v", 404, o.Payload)
}
func (o *RefreshPurgeEdgeApplicationInstanceNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RefreshPurgeEdgeApplicationInstanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshPurgeEdgeApplicationInstanceConflict creates a RefreshPurgeEdgeApplicationInstanceConflict with default headers values
func NewRefreshPurgeEdgeApplicationInstanceConflict() *RefreshPurgeEdgeApplicationInstanceConflict {
	return &RefreshPurgeEdgeApplicationInstanceConflict{}
}

/* RefreshPurgeEdgeApplicationInstanceConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.
*/
type RefreshPurgeEdgeApplicationInstanceConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RefreshPurgeEdgeApplicationInstanceConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/refresh/purge][%d] refreshPurgeEdgeApplicationInstanceConflict  %+v", 409, o.Payload)
}
func (o *RefreshPurgeEdgeApplicationInstanceConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RefreshPurgeEdgeApplicationInstanceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshPurgeEdgeApplicationInstanceInternalServerError creates a RefreshPurgeEdgeApplicationInstanceInternalServerError with default headers values
func NewRefreshPurgeEdgeApplicationInstanceInternalServerError() *RefreshPurgeEdgeApplicationInstanceInternalServerError {
	return &RefreshPurgeEdgeApplicationInstanceInternalServerError{}
}

/* RefreshPurgeEdgeApplicationInstanceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type RefreshPurgeEdgeApplicationInstanceInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RefreshPurgeEdgeApplicationInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/refresh/purge][%d] refreshPurgeEdgeApplicationInstanceInternalServerError  %+v", 500, o.Payload)
}
func (o *RefreshPurgeEdgeApplicationInstanceInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RefreshPurgeEdgeApplicationInstanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshPurgeEdgeApplicationInstanceGatewayTimeout creates a RefreshPurgeEdgeApplicationInstanceGatewayTimeout with default headers values
func NewRefreshPurgeEdgeApplicationInstanceGatewayTimeout() *RefreshPurgeEdgeApplicationInstanceGatewayTimeout {
	return &RefreshPurgeEdgeApplicationInstanceGatewayTimeout{}
}

/* RefreshPurgeEdgeApplicationInstanceGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type RefreshPurgeEdgeApplicationInstanceGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RefreshPurgeEdgeApplicationInstanceGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/refresh/purge][%d] refreshPurgeEdgeApplicationInstanceGatewayTimeout  %+v", 504, o.Payload)
}
func (o *RefreshPurgeEdgeApplicationInstanceGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RefreshPurgeEdgeApplicationInstanceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

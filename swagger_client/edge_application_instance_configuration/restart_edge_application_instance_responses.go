// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_instance_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// RestartEdgeApplicationInstanceReader is a Reader for the RestartEdgeApplicationInstance structure.
type RestartEdgeApplicationInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestartEdgeApplicationInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestartEdgeApplicationInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRestartEdgeApplicationInstanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestartEdgeApplicationInstanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestartEdgeApplicationInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRestartEdgeApplicationInstanceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestartEdgeApplicationInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewRestartEdgeApplicationInstanceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRestartEdgeApplicationInstanceOK creates a RestartEdgeApplicationInstanceOK with default headers values
func NewRestartEdgeApplicationInstanceOK() *RestartEdgeApplicationInstanceOK {
	return &RestartEdgeApplicationInstanceOK{}
}

/* RestartEdgeApplicationInstanceOK describes a response with status code 200, with default header values.

A successful response.
*/
type RestartEdgeApplicationInstanceOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RestartEdgeApplicationInstanceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/restart][%d] restartEdgeApplicationInstanceOK  %+v", 200, o.Payload)
}
func (o *RestartEdgeApplicationInstanceOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RestartEdgeApplicationInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartEdgeApplicationInstanceUnauthorized creates a RestartEdgeApplicationInstanceUnauthorized with default headers values
func NewRestartEdgeApplicationInstanceUnauthorized() *RestartEdgeApplicationInstanceUnauthorized {
	return &RestartEdgeApplicationInstanceUnauthorized{}
}

/* RestartEdgeApplicationInstanceUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type RestartEdgeApplicationInstanceUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RestartEdgeApplicationInstanceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/restart][%d] restartEdgeApplicationInstanceUnauthorized  %+v", 401, o.Payload)
}
func (o *RestartEdgeApplicationInstanceUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RestartEdgeApplicationInstanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartEdgeApplicationInstanceForbidden creates a RestartEdgeApplicationInstanceForbidden with default headers values
func NewRestartEdgeApplicationInstanceForbidden() *RestartEdgeApplicationInstanceForbidden {
	return &RestartEdgeApplicationInstanceForbidden{}
}

/* RestartEdgeApplicationInstanceForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type RestartEdgeApplicationInstanceForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RestartEdgeApplicationInstanceForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/restart][%d] restartEdgeApplicationInstanceForbidden  %+v", 403, o.Payload)
}
func (o *RestartEdgeApplicationInstanceForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RestartEdgeApplicationInstanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartEdgeApplicationInstanceNotFound creates a RestartEdgeApplicationInstanceNotFound with default headers values
func NewRestartEdgeApplicationInstanceNotFound() *RestartEdgeApplicationInstanceNotFound {
	return &RestartEdgeApplicationInstanceNotFound{}
}

/* RestartEdgeApplicationInstanceNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type RestartEdgeApplicationInstanceNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RestartEdgeApplicationInstanceNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/restart][%d] restartEdgeApplicationInstanceNotFound  %+v", 404, o.Payload)
}
func (o *RestartEdgeApplicationInstanceNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RestartEdgeApplicationInstanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartEdgeApplicationInstanceConflict creates a RestartEdgeApplicationInstanceConflict with default headers values
func NewRestartEdgeApplicationInstanceConflict() *RestartEdgeApplicationInstanceConflict {
	return &RestartEdgeApplicationInstanceConflict{}
}

/* RestartEdgeApplicationInstanceConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.
*/
type RestartEdgeApplicationInstanceConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RestartEdgeApplicationInstanceConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/restart][%d] restartEdgeApplicationInstanceConflict  %+v", 409, o.Payload)
}
func (o *RestartEdgeApplicationInstanceConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RestartEdgeApplicationInstanceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartEdgeApplicationInstanceInternalServerError creates a RestartEdgeApplicationInstanceInternalServerError with default headers values
func NewRestartEdgeApplicationInstanceInternalServerError() *RestartEdgeApplicationInstanceInternalServerError {
	return &RestartEdgeApplicationInstanceInternalServerError{}
}

/* RestartEdgeApplicationInstanceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type RestartEdgeApplicationInstanceInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RestartEdgeApplicationInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/restart][%d] restartEdgeApplicationInstanceInternalServerError  %+v", 500, o.Payload)
}
func (o *RestartEdgeApplicationInstanceInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RestartEdgeApplicationInstanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartEdgeApplicationInstanceGatewayTimeout creates a RestartEdgeApplicationInstanceGatewayTimeout with default headers values
func NewRestartEdgeApplicationInstanceGatewayTimeout() *RestartEdgeApplicationInstanceGatewayTimeout {
	return &RestartEdgeApplicationInstanceGatewayTimeout{}
}

/* RestartEdgeApplicationInstanceGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type RestartEdgeApplicationInstanceGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RestartEdgeApplicationInstanceGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/instances/id/{id}/restart][%d] restartEdgeApplicationInstanceGatewayTimeout  %+v", 504, o.Payload)
}
func (o *RestartEdgeApplicationInstanceGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RestartEdgeApplicationInstanceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_instance_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetEdgeApplicationInstanceStatusByNameReader is a Reader for the GetEdgeApplicationInstanceStatusByName structure.
type GetEdgeApplicationInstanceStatusByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEdgeApplicationInstanceStatusByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEdgeApplicationInstanceStatusByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEdgeApplicationInstanceStatusByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEdgeApplicationInstanceStatusByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEdgeApplicationInstanceStatusByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEdgeApplicationInstanceStatusByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetEdgeApplicationInstanceStatusByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEdgeApplicationInstanceStatusByNameOK creates a GetEdgeApplicationInstanceStatusByNameOK with default headers values
func NewGetEdgeApplicationInstanceStatusByNameOK() *GetEdgeApplicationInstanceStatusByNameOK {
	return &GetEdgeApplicationInstanceStatusByNameOK{}
}

/* GetEdgeApplicationInstanceStatusByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetEdgeApplicationInstanceStatusByNameOK struct {
	Payload *swagger_models.AppInstStatusMsg
}

func (o *GetEdgeApplicationInstanceStatusByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}/status][%d] getEdgeApplicationInstanceStatusByNameOK  %+v", 200, o.Payload)
}
func (o *GetEdgeApplicationInstanceStatusByNameOK) GetPayload() *swagger_models.AppInstStatusMsg {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceStatusByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.AppInstStatusMsg)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceStatusByNameUnauthorized creates a GetEdgeApplicationInstanceStatusByNameUnauthorized with default headers values
func NewGetEdgeApplicationInstanceStatusByNameUnauthorized() *GetEdgeApplicationInstanceStatusByNameUnauthorized {
	return &GetEdgeApplicationInstanceStatusByNameUnauthorized{}
}

/* GetEdgeApplicationInstanceStatusByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetEdgeApplicationInstanceStatusByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceStatusByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}/status][%d] getEdgeApplicationInstanceStatusByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetEdgeApplicationInstanceStatusByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceStatusByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceStatusByNameForbidden creates a GetEdgeApplicationInstanceStatusByNameForbidden with default headers values
func NewGetEdgeApplicationInstanceStatusByNameForbidden() *GetEdgeApplicationInstanceStatusByNameForbidden {
	return &GetEdgeApplicationInstanceStatusByNameForbidden{}
}

/* GetEdgeApplicationInstanceStatusByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type GetEdgeApplicationInstanceStatusByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceStatusByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}/status][%d] getEdgeApplicationInstanceStatusByNameForbidden  %+v", 403, o.Payload)
}
func (o *GetEdgeApplicationInstanceStatusByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceStatusByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceStatusByNameNotFound creates a GetEdgeApplicationInstanceStatusByNameNotFound with default headers values
func NewGetEdgeApplicationInstanceStatusByNameNotFound() *GetEdgeApplicationInstanceStatusByNameNotFound {
	return &GetEdgeApplicationInstanceStatusByNameNotFound{}
}

/* GetEdgeApplicationInstanceStatusByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetEdgeApplicationInstanceStatusByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceStatusByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}/status][%d] getEdgeApplicationInstanceStatusByNameNotFound  %+v", 404, o.Payload)
}
func (o *GetEdgeApplicationInstanceStatusByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceStatusByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceStatusByNameInternalServerError creates a GetEdgeApplicationInstanceStatusByNameInternalServerError with default headers values
func NewGetEdgeApplicationInstanceStatusByNameInternalServerError() *GetEdgeApplicationInstanceStatusByNameInternalServerError {
	return &GetEdgeApplicationInstanceStatusByNameInternalServerError{}
}

/* GetEdgeApplicationInstanceStatusByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetEdgeApplicationInstanceStatusByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceStatusByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}/status][%d] getEdgeApplicationInstanceStatusByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetEdgeApplicationInstanceStatusByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceStatusByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceStatusByNameGatewayTimeout creates a GetEdgeApplicationInstanceStatusByNameGatewayTimeout with default headers values
func NewGetEdgeApplicationInstanceStatusByNameGatewayTimeout() *GetEdgeApplicationInstanceStatusByNameGatewayTimeout {
	return &GetEdgeApplicationInstanceStatusByNameGatewayTimeout{}
}

/* GetEdgeApplicationInstanceStatusByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetEdgeApplicationInstanceStatusByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceStatusByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/name/{name}/status][%d] getEdgeApplicationInstanceStatusByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetEdgeApplicationInstanceStatusByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceStatusByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_instance_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetEdgeApplicationInstanceTopTalkersReader is a Reader for the GetEdgeApplicationInstanceTopTalkers structure.
type GetEdgeApplicationInstanceTopTalkersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEdgeApplicationInstanceTopTalkersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEdgeApplicationInstanceTopTalkersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEdgeApplicationInstanceTopTalkersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEdgeApplicationInstanceTopTalkersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEdgeApplicationInstanceTopTalkersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEdgeApplicationInstanceTopTalkersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetEdgeApplicationInstanceTopTalkersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEdgeApplicationInstanceTopTalkersOK creates a GetEdgeApplicationInstanceTopTalkersOK with default headers values
func NewGetEdgeApplicationInstanceTopTalkersOK() *GetEdgeApplicationInstanceTopTalkersOK {
	return &GetEdgeApplicationInstanceTopTalkersOK{}
}

/* GetEdgeApplicationInstanceTopTalkersOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetEdgeApplicationInstanceTopTalkersOK struct {
	Payload *swagger_models.TopTalkersResponse
}

func (o *GetEdgeApplicationInstanceTopTalkersOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/toptalkers][%d] getEdgeApplicationInstanceTopTalkersOK  %+v", 200, o.Payload)
}
func (o *GetEdgeApplicationInstanceTopTalkersOK) GetPayload() *swagger_models.TopTalkersResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTopTalkersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.TopTalkersResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTopTalkersUnauthorized creates a GetEdgeApplicationInstanceTopTalkersUnauthorized with default headers values
func NewGetEdgeApplicationInstanceTopTalkersUnauthorized() *GetEdgeApplicationInstanceTopTalkersUnauthorized {
	return &GetEdgeApplicationInstanceTopTalkersUnauthorized{}
}

/* GetEdgeApplicationInstanceTopTalkersUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetEdgeApplicationInstanceTopTalkersUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTopTalkersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/toptalkers][%d] getEdgeApplicationInstanceTopTalkersUnauthorized  %+v", 401, o.Payload)
}
func (o *GetEdgeApplicationInstanceTopTalkersUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTopTalkersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTopTalkersForbidden creates a GetEdgeApplicationInstanceTopTalkersForbidden with default headers values
func NewGetEdgeApplicationInstanceTopTalkersForbidden() *GetEdgeApplicationInstanceTopTalkersForbidden {
	return &GetEdgeApplicationInstanceTopTalkersForbidden{}
}

/* GetEdgeApplicationInstanceTopTalkersForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type GetEdgeApplicationInstanceTopTalkersForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTopTalkersForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/toptalkers][%d] getEdgeApplicationInstanceTopTalkersForbidden  %+v", 403, o.Payload)
}
func (o *GetEdgeApplicationInstanceTopTalkersForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTopTalkersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTopTalkersNotFound creates a GetEdgeApplicationInstanceTopTalkersNotFound with default headers values
func NewGetEdgeApplicationInstanceTopTalkersNotFound() *GetEdgeApplicationInstanceTopTalkersNotFound {
	return &GetEdgeApplicationInstanceTopTalkersNotFound{}
}

/* GetEdgeApplicationInstanceTopTalkersNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetEdgeApplicationInstanceTopTalkersNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTopTalkersNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/toptalkers][%d] getEdgeApplicationInstanceTopTalkersNotFound  %+v", 404, o.Payload)
}
func (o *GetEdgeApplicationInstanceTopTalkersNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTopTalkersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTopTalkersInternalServerError creates a GetEdgeApplicationInstanceTopTalkersInternalServerError with default headers values
func NewGetEdgeApplicationInstanceTopTalkersInternalServerError() *GetEdgeApplicationInstanceTopTalkersInternalServerError {
	return &GetEdgeApplicationInstanceTopTalkersInternalServerError{}
}

/* GetEdgeApplicationInstanceTopTalkersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetEdgeApplicationInstanceTopTalkersInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTopTalkersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/toptalkers][%d] getEdgeApplicationInstanceTopTalkersInternalServerError  %+v", 500, o.Payload)
}
func (o *GetEdgeApplicationInstanceTopTalkersInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTopTalkersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTopTalkersGatewayTimeout creates a GetEdgeApplicationInstanceTopTalkersGatewayTimeout with default headers values
func NewGetEdgeApplicationInstanceTopTalkersGatewayTimeout() *GetEdgeApplicationInstanceTopTalkersGatewayTimeout {
	return &GetEdgeApplicationInstanceTopTalkersGatewayTimeout{}
}

/* GetEdgeApplicationInstanceTopTalkersGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetEdgeApplicationInstanceTopTalkersGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTopTalkersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/toptalkers][%d] getEdgeApplicationInstanceTopTalkersGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetEdgeApplicationInstanceTopTalkersGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTopTalkersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_application_instance_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetEdgeApplicationInstanceTrafficFlowsReader is a Reader for the GetEdgeApplicationInstanceTrafficFlows structure.
type GetEdgeApplicationInstanceTrafficFlowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEdgeApplicationInstanceTrafficFlowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEdgeApplicationInstanceTrafficFlowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEdgeApplicationInstanceTrafficFlowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEdgeApplicationInstanceTrafficFlowsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEdgeApplicationInstanceTrafficFlowsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEdgeApplicationInstanceTrafficFlowsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetEdgeApplicationInstanceTrafficFlowsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEdgeApplicationInstanceTrafficFlowsOK creates a GetEdgeApplicationInstanceTrafficFlowsOK with default headers values
func NewGetEdgeApplicationInstanceTrafficFlowsOK() *GetEdgeApplicationInstanceTrafficFlowsOK {
	return &GetEdgeApplicationInstanceTrafficFlowsOK{}
}

/* GetEdgeApplicationInstanceTrafficFlowsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetEdgeApplicationInstanceTrafficFlowsOK struct {
	Payload *swagger_models.ClassificationResponse
}

func (o *GetEdgeApplicationInstanceTrafficFlowsOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/classification][%d] getEdgeApplicationInstanceTrafficFlowsOK  %+v", 200, o.Payload)
}
func (o *GetEdgeApplicationInstanceTrafficFlowsOK) GetPayload() *swagger_models.ClassificationResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTrafficFlowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ClassificationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTrafficFlowsUnauthorized creates a GetEdgeApplicationInstanceTrafficFlowsUnauthorized with default headers values
func NewGetEdgeApplicationInstanceTrafficFlowsUnauthorized() *GetEdgeApplicationInstanceTrafficFlowsUnauthorized {
	return &GetEdgeApplicationInstanceTrafficFlowsUnauthorized{}
}

/* GetEdgeApplicationInstanceTrafficFlowsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetEdgeApplicationInstanceTrafficFlowsUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTrafficFlowsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/classification][%d] getEdgeApplicationInstanceTrafficFlowsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetEdgeApplicationInstanceTrafficFlowsUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTrafficFlowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTrafficFlowsForbidden creates a GetEdgeApplicationInstanceTrafficFlowsForbidden with default headers values
func NewGetEdgeApplicationInstanceTrafficFlowsForbidden() *GetEdgeApplicationInstanceTrafficFlowsForbidden {
	return &GetEdgeApplicationInstanceTrafficFlowsForbidden{}
}

/* GetEdgeApplicationInstanceTrafficFlowsForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type GetEdgeApplicationInstanceTrafficFlowsForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTrafficFlowsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/classification][%d] getEdgeApplicationInstanceTrafficFlowsForbidden  %+v", 403, o.Payload)
}
func (o *GetEdgeApplicationInstanceTrafficFlowsForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTrafficFlowsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTrafficFlowsNotFound creates a GetEdgeApplicationInstanceTrafficFlowsNotFound with default headers values
func NewGetEdgeApplicationInstanceTrafficFlowsNotFound() *GetEdgeApplicationInstanceTrafficFlowsNotFound {
	return &GetEdgeApplicationInstanceTrafficFlowsNotFound{}
}

/* GetEdgeApplicationInstanceTrafficFlowsNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetEdgeApplicationInstanceTrafficFlowsNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTrafficFlowsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/classification][%d] getEdgeApplicationInstanceTrafficFlowsNotFound  %+v", 404, o.Payload)
}
func (o *GetEdgeApplicationInstanceTrafficFlowsNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTrafficFlowsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTrafficFlowsInternalServerError creates a GetEdgeApplicationInstanceTrafficFlowsInternalServerError with default headers values
func NewGetEdgeApplicationInstanceTrafficFlowsInternalServerError() *GetEdgeApplicationInstanceTrafficFlowsInternalServerError {
	return &GetEdgeApplicationInstanceTrafficFlowsInternalServerError{}
}

/* GetEdgeApplicationInstanceTrafficFlowsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetEdgeApplicationInstanceTrafficFlowsInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTrafficFlowsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/classification][%d] getEdgeApplicationInstanceTrafficFlowsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetEdgeApplicationInstanceTrafficFlowsInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTrafficFlowsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeApplicationInstanceTrafficFlowsGatewayTimeout creates a GetEdgeApplicationInstanceTrafficFlowsGatewayTimeout with default headers values
func NewGetEdgeApplicationInstanceTrafficFlowsGatewayTimeout() *GetEdgeApplicationInstanceTrafficFlowsGatewayTimeout {
	return &GetEdgeApplicationInstanceTrafficFlowsGatewayTimeout{}
}

/* GetEdgeApplicationInstanceTrafficFlowsGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetEdgeApplicationInstanceTrafficFlowsGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeApplicationInstanceTrafficFlowsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/instances/id/{id}/flowlog/classification][%d] getEdgeApplicationInstanceTrafficFlowsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetEdgeApplicationInstanceTrafficFlowsGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeApplicationInstanceTrafficFlowsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

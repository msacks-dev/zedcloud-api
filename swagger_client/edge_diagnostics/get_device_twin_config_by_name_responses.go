// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_diagnostics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetDeviceTwinConfigByNameReader is a Reader for the GetDeviceTwinConfigByName structure.
type GetDeviceTwinConfigByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceTwinConfigByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeviceTwinConfigByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDeviceTwinConfigByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDeviceTwinConfigByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDeviceTwinConfigByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeviceTwinConfigByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDeviceTwinConfigByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetDeviceTwinConfigByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDeviceTwinConfigByNameOK creates a GetDeviceTwinConfigByNameOK with default headers values
func NewGetDeviceTwinConfigByNameOK() *GetDeviceTwinConfigByNameOK {
	return &GetDeviceTwinConfigByNameOK{}
}

/* GetDeviceTwinConfigByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetDeviceTwinConfigByNameOK struct {
	Payload *swagger_models.ConfigServiceResp
}

func (o *GetDeviceTwinConfigByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/config][%d] getDeviceTwinConfigByNameOK  %+v", 200, o.Payload)
}
func (o *GetDeviceTwinConfigByNameOK) GetPayload() *swagger_models.ConfigServiceResp {
	return o.Payload
}

func (o *GetDeviceTwinConfigByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ConfigServiceResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTwinConfigByNameBadRequest creates a GetDeviceTwinConfigByNameBadRequest with default headers values
func NewGetDeviceTwinConfigByNameBadRequest() *GetDeviceTwinConfigByNameBadRequest {
	return &GetDeviceTwinConfigByNameBadRequest{}
}

/* GetDeviceTwinConfigByNameBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type GetDeviceTwinConfigByNameBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTwinConfigByNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/config][%d] getDeviceTwinConfigByNameBadRequest  %+v", 400, o.Payload)
}
func (o *GetDeviceTwinConfigByNameBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTwinConfigByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTwinConfigByNameUnauthorized creates a GetDeviceTwinConfigByNameUnauthorized with default headers values
func NewGetDeviceTwinConfigByNameUnauthorized() *GetDeviceTwinConfigByNameUnauthorized {
	return &GetDeviceTwinConfigByNameUnauthorized{}
}

/* GetDeviceTwinConfigByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetDeviceTwinConfigByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTwinConfigByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/config][%d] getDeviceTwinConfigByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDeviceTwinConfigByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTwinConfigByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTwinConfigByNameForbidden creates a GetDeviceTwinConfigByNameForbidden with default headers values
func NewGetDeviceTwinConfigByNameForbidden() *GetDeviceTwinConfigByNameForbidden {
	return &GetDeviceTwinConfigByNameForbidden{}
}

/* GetDeviceTwinConfigByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetDeviceTwinConfigByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTwinConfigByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/config][%d] getDeviceTwinConfigByNameForbidden  %+v", 403, o.Payload)
}
func (o *GetDeviceTwinConfigByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTwinConfigByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTwinConfigByNameNotFound creates a GetDeviceTwinConfigByNameNotFound with default headers values
func NewGetDeviceTwinConfigByNameNotFound() *GetDeviceTwinConfigByNameNotFound {
	return &GetDeviceTwinConfigByNameNotFound{}
}

/* GetDeviceTwinConfigByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetDeviceTwinConfigByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTwinConfigByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/config][%d] getDeviceTwinConfigByNameNotFound  %+v", 404, o.Payload)
}
func (o *GetDeviceTwinConfigByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTwinConfigByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTwinConfigByNameInternalServerError creates a GetDeviceTwinConfigByNameInternalServerError with default headers values
func NewGetDeviceTwinConfigByNameInternalServerError() *GetDeviceTwinConfigByNameInternalServerError {
	return &GetDeviceTwinConfigByNameInternalServerError{}
}

/* GetDeviceTwinConfigByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetDeviceTwinConfigByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTwinConfigByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/config][%d] getDeviceTwinConfigByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDeviceTwinConfigByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTwinConfigByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTwinConfigByNameGatewayTimeout creates a GetDeviceTwinConfigByNameGatewayTimeout with default headers values
func NewGetDeviceTwinConfigByNameGatewayTimeout() *GetDeviceTwinConfigByNameGatewayTimeout {
	return &GetDeviceTwinConfigByNameGatewayTimeout{}
}

/* GetDeviceTwinConfigByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetDeviceTwinConfigByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTwinConfigByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/name/{name}/config][%d] getDeviceTwinConfigByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetDeviceTwinConfigByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTwinConfigByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

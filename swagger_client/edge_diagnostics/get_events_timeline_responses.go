// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_diagnostics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetEventsTimelineReader is a Reader for the GetEventsTimeline structure.
type GetEventsTimelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventsTimelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEventsTimelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEventsTimelineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEventsTimelineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEventsTimelineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEventsTimelineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetEventsTimelineGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEventsTimelineOK creates a GetEventsTimelineOK with default headers values
func NewGetEventsTimelineOK() *GetEventsTimelineOK {
	return &GetEventsTimelineOK{}
}

/* GetEventsTimelineOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetEventsTimelineOK struct {
	Payload *swagger_models.EventQueryResponse
}

func (o *GetEventsTimelineOK) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] getEventsTimelineOK  %+v", 200, o.Payload)
}
func (o *GetEventsTimelineOK) GetPayload() *swagger_models.EventQueryResponse {
	return o.Payload
}

func (o *GetEventsTimelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.EventQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventsTimelineBadRequest creates a GetEventsTimelineBadRequest with default headers values
func NewGetEventsTimelineBadRequest() *GetEventsTimelineBadRequest {
	return &GetEventsTimelineBadRequest{}
}

/* GetEventsTimelineBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type GetEventsTimelineBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEventsTimelineBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] getEventsTimelineBadRequest  %+v", 400, o.Payload)
}
func (o *GetEventsTimelineBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEventsTimelineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventsTimelineUnauthorized creates a GetEventsTimelineUnauthorized with default headers values
func NewGetEventsTimelineUnauthorized() *GetEventsTimelineUnauthorized {
	return &GetEventsTimelineUnauthorized{}
}

/* GetEventsTimelineUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetEventsTimelineUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEventsTimelineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] getEventsTimelineUnauthorized  %+v", 401, o.Payload)
}
func (o *GetEventsTimelineUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEventsTimelineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventsTimelineForbidden creates a GetEventsTimelineForbidden with default headers values
func NewGetEventsTimelineForbidden() *GetEventsTimelineForbidden {
	return &GetEventsTimelineForbidden{}
}

/* GetEventsTimelineForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-app level access permission for the operation or does not have access scope to the project.
*/
type GetEventsTimelineForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEventsTimelineForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] getEventsTimelineForbidden  %+v", 403, o.Payload)
}
func (o *GetEventsTimelineForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEventsTimelineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventsTimelineInternalServerError creates a GetEventsTimelineInternalServerError with default headers values
func NewGetEventsTimelineInternalServerError() *GetEventsTimelineInternalServerError {
	return &GetEventsTimelineInternalServerError{}
}

/* GetEventsTimelineInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetEventsTimelineInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEventsTimelineInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] getEventsTimelineInternalServerError  %+v", 500, o.Payload)
}
func (o *GetEventsTimelineInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEventsTimelineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventsTimelineGatewayTimeout creates a GetEventsTimelineGatewayTimeout with default headers values
func NewGetEventsTimelineGatewayTimeout() *GetEventsTimelineGatewayTimeout {
	return &GetEventsTimelineGatewayTimeout{}
}

/* GetEventsTimelineGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetEventsTimelineGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEventsTimelineGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/events][%d] getEventsTimelineGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetEventsTimelineGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEventsTimelineGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

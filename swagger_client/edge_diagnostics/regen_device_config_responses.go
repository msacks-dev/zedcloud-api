// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_diagnostics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// RegenDeviceConfigReader is a Reader for the RegenDeviceConfig structure.
type RegenDeviceConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegenDeviceConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegenDeviceConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegenDeviceConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRegenDeviceConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRegenDeviceConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegenDeviceConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegenDeviceConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewRegenDeviceConfigGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRegenDeviceConfigOK creates a RegenDeviceConfigOK with default headers values
func NewRegenDeviceConfigOK() *RegenDeviceConfigOK {
	return &RegenDeviceConfigOK{}
}

/* RegenDeviceConfigOK describes a response with status code 200, with default header values.

A successful response.
*/
type RegenDeviceConfigOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RegenDeviceConfigOK) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/config][%d] regenDeviceConfigOK  %+v", 200, o.Payload)
}
func (o *RegenDeviceConfigOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RegenDeviceConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegenDeviceConfigBadRequest creates a RegenDeviceConfigBadRequest with default headers values
func NewRegenDeviceConfigBadRequest() *RegenDeviceConfigBadRequest {
	return &RegenDeviceConfigBadRequest{}
}

/* RegenDeviceConfigBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type RegenDeviceConfigBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RegenDeviceConfigBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/config][%d] regenDeviceConfigBadRequest  %+v", 400, o.Payload)
}
func (o *RegenDeviceConfigBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RegenDeviceConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegenDeviceConfigUnauthorized creates a RegenDeviceConfigUnauthorized with default headers values
func NewRegenDeviceConfigUnauthorized() *RegenDeviceConfigUnauthorized {
	return &RegenDeviceConfigUnauthorized{}
}

/* RegenDeviceConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type RegenDeviceConfigUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RegenDeviceConfigUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/config][%d] regenDeviceConfigUnauthorized  %+v", 401, o.Payload)
}
func (o *RegenDeviceConfigUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RegenDeviceConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegenDeviceConfigForbidden creates a RegenDeviceConfigForbidden with default headers values
func NewRegenDeviceConfigForbidden() *RegenDeviceConfigForbidden {
	return &RegenDeviceConfigForbidden{}
}

/* RegenDeviceConfigForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type RegenDeviceConfigForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RegenDeviceConfigForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/config][%d] regenDeviceConfigForbidden  %+v", 403, o.Payload)
}
func (o *RegenDeviceConfigForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RegenDeviceConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegenDeviceConfigNotFound creates a RegenDeviceConfigNotFound with default headers values
func NewRegenDeviceConfigNotFound() *RegenDeviceConfigNotFound {
	return &RegenDeviceConfigNotFound{}
}

/* RegenDeviceConfigNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type RegenDeviceConfigNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RegenDeviceConfigNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/config][%d] regenDeviceConfigNotFound  %+v", 404, o.Payload)
}
func (o *RegenDeviceConfigNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RegenDeviceConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegenDeviceConfigInternalServerError creates a RegenDeviceConfigInternalServerError with default headers values
func NewRegenDeviceConfigInternalServerError() *RegenDeviceConfigInternalServerError {
	return &RegenDeviceConfigInternalServerError{}
}

/* RegenDeviceConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type RegenDeviceConfigInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RegenDeviceConfigInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/config][%d] regenDeviceConfigInternalServerError  %+v", 500, o.Payload)
}
func (o *RegenDeviceConfigInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RegenDeviceConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegenDeviceConfigGatewayTimeout creates a RegenDeviceConfigGatewayTimeout with default headers values
func NewRegenDeviceConfigGatewayTimeout() *RegenDeviceConfigGatewayTimeout {
	return &RegenDeviceConfigGatewayTimeout{}
}

/* RegenDeviceConfigGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type RegenDeviceConfigGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RegenDeviceConfigGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/config][%d] regenDeviceConfigGatewayTimeout  %+v", 504, o.Payload)
}
func (o *RegenDeviceConfigGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RegenDeviceConfigGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_network_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// DeleteEdgeNetworkReader is a Reader for the DeleteEdgeNetwork structure.
type DeleteEdgeNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEdgeNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteEdgeNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteEdgeNetworkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteEdgeNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEdgeNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteEdgeNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteEdgeNetworkGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEdgeNetworkOK creates a DeleteEdgeNetworkOK with default headers values
func NewDeleteEdgeNetworkOK() *DeleteEdgeNetworkOK {
	return &DeleteEdgeNetworkOK{}
}

/* DeleteEdgeNetworkOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteEdgeNetworkOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteEdgeNetworkOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/networks/id/{id}][%d] deleteEdgeNetworkOK  %+v", 200, o.Payload)
}
func (o *DeleteEdgeNetworkOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteEdgeNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeNetworkUnauthorized creates a DeleteEdgeNetworkUnauthorized with default headers values
func NewDeleteEdgeNetworkUnauthorized() *DeleteEdgeNetworkUnauthorized {
	return &DeleteEdgeNetworkUnauthorized{}
}

/* DeleteEdgeNetworkUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type DeleteEdgeNetworkUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteEdgeNetworkUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/networks/id/{id}][%d] deleteEdgeNetworkUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteEdgeNetworkUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteEdgeNetworkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeNetworkForbidden creates a DeleteEdgeNetworkForbidden with default headers values
func NewDeleteEdgeNetworkForbidden() *DeleteEdgeNetworkForbidden {
	return &DeleteEdgeNetworkForbidden{}
}

/* DeleteEdgeNetworkForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type DeleteEdgeNetworkForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteEdgeNetworkForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/networks/id/{id}][%d] deleteEdgeNetworkForbidden  %+v", 403, o.Payload)
}
func (o *DeleteEdgeNetworkForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteEdgeNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeNetworkNotFound creates a DeleteEdgeNetworkNotFound with default headers values
func NewDeleteEdgeNetworkNotFound() *DeleteEdgeNetworkNotFound {
	return &DeleteEdgeNetworkNotFound{}
}

/* DeleteEdgeNetworkNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type DeleteEdgeNetworkNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteEdgeNetworkNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/networks/id/{id}][%d] deleteEdgeNetworkNotFound  %+v", 404, o.Payload)
}
func (o *DeleteEdgeNetworkNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteEdgeNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeNetworkInternalServerError creates a DeleteEdgeNetworkInternalServerError with default headers values
func NewDeleteEdgeNetworkInternalServerError() *DeleteEdgeNetworkInternalServerError {
	return &DeleteEdgeNetworkInternalServerError{}
}

/* DeleteEdgeNetworkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type DeleteEdgeNetworkInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteEdgeNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/networks/id/{id}][%d] deleteEdgeNetworkInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteEdgeNetworkInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteEdgeNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeNetworkGatewayTimeout creates a DeleteEdgeNetworkGatewayTimeout with default headers values
func NewDeleteEdgeNetworkGatewayTimeout() *DeleteEdgeNetworkGatewayTimeout {
	return &DeleteEdgeNetworkGatewayTimeout{}
}

/* DeleteEdgeNetworkGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type DeleteEdgeNetworkGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteEdgeNetworkGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/networks/id/{id}][%d] deleteEdgeNetworkGatewayTimeout  %+v", 504, o.Payload)
}
func (o *DeleteEdgeNetworkGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteEdgeNetworkGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

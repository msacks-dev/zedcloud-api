// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_network_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetEdgeNetworkReader is a Reader for the GetEdgeNetwork structure.
type GetEdgeNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEdgeNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEdgeNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEdgeNetworkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEdgeNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEdgeNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEdgeNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetEdgeNetworkGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEdgeNetworkOK creates a GetEdgeNetworkOK with default headers values
func NewGetEdgeNetworkOK() *GetEdgeNetworkOK {
	return &GetEdgeNetworkOK{}
}

/* GetEdgeNetworkOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetEdgeNetworkOK struct {
	Payload *swagger_models.NetConfig
}

func (o *GetEdgeNetworkOK) Error() string {
	return fmt.Sprintf("[GET /v1/networks/id/{id}][%d] getEdgeNetworkOK  %+v", 200, o.Payload)
}
func (o *GetEdgeNetworkOK) GetPayload() *swagger_models.NetConfig {
	return o.Payload
}

func (o *GetEdgeNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.NetConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeNetworkUnauthorized creates a GetEdgeNetworkUnauthorized with default headers values
func NewGetEdgeNetworkUnauthorized() *GetEdgeNetworkUnauthorized {
	return &GetEdgeNetworkUnauthorized{}
}

/* GetEdgeNetworkUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetEdgeNetworkUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeNetworkUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/networks/id/{id}][%d] getEdgeNetworkUnauthorized  %+v", 401, o.Payload)
}
func (o *GetEdgeNetworkUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeNetworkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeNetworkForbidden creates a GetEdgeNetworkForbidden with default headers values
func NewGetEdgeNetworkForbidden() *GetEdgeNetworkForbidden {
	return &GetEdgeNetworkForbidden{}
}

/* GetEdgeNetworkForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetEdgeNetworkForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeNetworkForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/networks/id/{id}][%d] getEdgeNetworkForbidden  %+v", 403, o.Payload)
}
func (o *GetEdgeNetworkForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeNetworkNotFound creates a GetEdgeNetworkNotFound with default headers values
func NewGetEdgeNetworkNotFound() *GetEdgeNetworkNotFound {
	return &GetEdgeNetworkNotFound{}
}

/* GetEdgeNetworkNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetEdgeNetworkNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeNetworkNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/networks/id/{id}][%d] getEdgeNetworkNotFound  %+v", 404, o.Payload)
}
func (o *GetEdgeNetworkNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeNetworkInternalServerError creates a GetEdgeNetworkInternalServerError with default headers values
func NewGetEdgeNetworkInternalServerError() *GetEdgeNetworkInternalServerError {
	return &GetEdgeNetworkInternalServerError{}
}

/* GetEdgeNetworkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetEdgeNetworkInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/networks/id/{id}][%d] getEdgeNetworkInternalServerError  %+v", 500, o.Payload)
}
func (o *GetEdgeNetworkInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeNetworkGatewayTimeout creates a GetEdgeNetworkGatewayTimeout with default headers values
func NewGetEdgeNetworkGatewayTimeout() *GetEdgeNetworkGatewayTimeout {
	return &GetEdgeNetworkGatewayTimeout{}
}

/* GetEdgeNetworkGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetEdgeNetworkGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetEdgeNetworkGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/networks/id/{id}][%d] getEdgeNetworkGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetEdgeNetworkGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetEdgeNetworkGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

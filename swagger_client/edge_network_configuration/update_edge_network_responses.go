// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_network_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// UpdateEdgeNetworkReader is a Reader for the UpdateEdgeNetwork structure.
type UpdateEdgeNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEdgeNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEdgeNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateEdgeNetworkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateEdgeNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateEdgeNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateEdgeNetworkConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateEdgeNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewUpdateEdgeNetworkGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateEdgeNetworkOK creates a UpdateEdgeNetworkOK with default headers values
func NewUpdateEdgeNetworkOK() *UpdateEdgeNetworkOK {
	return &UpdateEdgeNetworkOK{}
}

/* UpdateEdgeNetworkOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateEdgeNetworkOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkOK) Error() string {
	return fmt.Sprintf("[PUT /v1/networks/id/{id}][%d] updateEdgeNetworkOK  %+v", 200, o.Payload)
}
func (o *UpdateEdgeNetworkOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkUnauthorized creates a UpdateEdgeNetworkUnauthorized with default headers values
func NewUpdateEdgeNetworkUnauthorized() *UpdateEdgeNetworkUnauthorized {
	return &UpdateEdgeNetworkUnauthorized{}
}

/* UpdateEdgeNetworkUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type UpdateEdgeNetworkUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/networks/id/{id}][%d] updateEdgeNetworkUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateEdgeNetworkUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkForbidden creates a UpdateEdgeNetworkForbidden with default headers values
func NewUpdateEdgeNetworkForbidden() *UpdateEdgeNetworkForbidden {
	return &UpdateEdgeNetworkForbidden{}
}

/* UpdateEdgeNetworkForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type UpdateEdgeNetworkForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/networks/id/{id}][%d] updateEdgeNetworkForbidden  %+v", 403, o.Payload)
}
func (o *UpdateEdgeNetworkForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkNotFound creates a UpdateEdgeNetworkNotFound with default headers values
func NewUpdateEdgeNetworkNotFound() *UpdateEdgeNetworkNotFound {
	return &UpdateEdgeNetworkNotFound{}
}

/* UpdateEdgeNetworkNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type UpdateEdgeNetworkNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/networks/id/{id}][%d] updateEdgeNetworkNotFound  %+v", 404, o.Payload)
}
func (o *UpdateEdgeNetworkNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkConflict creates a UpdateEdgeNetworkConflict with default headers values
func NewUpdateEdgeNetworkConflict() *UpdateEdgeNetworkConflict {
	return &UpdateEdgeNetworkConflict{}
}

/* UpdateEdgeNetworkConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.
*/
type UpdateEdgeNetworkConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/networks/id/{id}][%d] updateEdgeNetworkConflict  %+v", 409, o.Payload)
}
func (o *UpdateEdgeNetworkConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkInternalServerError creates a UpdateEdgeNetworkInternalServerError with default headers values
func NewUpdateEdgeNetworkInternalServerError() *UpdateEdgeNetworkInternalServerError {
	return &UpdateEdgeNetworkInternalServerError{}
}

/* UpdateEdgeNetworkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type UpdateEdgeNetworkInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/networks/id/{id}][%d] updateEdgeNetworkInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateEdgeNetworkInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkGatewayTimeout creates a UpdateEdgeNetworkGatewayTimeout with default headers values
func NewUpdateEdgeNetworkGatewayTimeout() *UpdateEdgeNetworkGatewayTimeout {
	return &UpdateEdgeNetworkGatewayTimeout{}
}

/* UpdateEdgeNetworkGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type UpdateEdgeNetworkGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/networks/id/{id}][%d] updateEdgeNetworkGatewayTimeout  %+v", 504, o.Payload)
}
func (o *UpdateEdgeNetworkGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

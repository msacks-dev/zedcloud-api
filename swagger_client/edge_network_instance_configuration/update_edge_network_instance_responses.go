// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_network_instance_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// UpdateEdgeNetworkInstanceReader is a Reader for the UpdateEdgeNetworkInstance structure.
type UpdateEdgeNetworkInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEdgeNetworkInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEdgeNetworkInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateEdgeNetworkInstanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateEdgeNetworkInstanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateEdgeNetworkInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateEdgeNetworkInstanceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateEdgeNetworkInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewUpdateEdgeNetworkInstanceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateEdgeNetworkInstanceOK creates a UpdateEdgeNetworkInstanceOK with default headers values
func NewUpdateEdgeNetworkInstanceOK() *UpdateEdgeNetworkInstanceOK {
	return &UpdateEdgeNetworkInstanceOK{}
}

/* UpdateEdgeNetworkInstanceOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateEdgeNetworkInstanceOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkInstanceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/netinsts/id/{id}][%d] updateEdgeNetworkInstanceOK  %+v", 200, o.Payload)
}
func (o *UpdateEdgeNetworkInstanceOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkInstanceUnauthorized creates a UpdateEdgeNetworkInstanceUnauthorized with default headers values
func NewUpdateEdgeNetworkInstanceUnauthorized() *UpdateEdgeNetworkInstanceUnauthorized {
	return &UpdateEdgeNetworkInstanceUnauthorized{}
}

/* UpdateEdgeNetworkInstanceUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type UpdateEdgeNetworkInstanceUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkInstanceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/netinsts/id/{id}][%d] updateEdgeNetworkInstanceUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateEdgeNetworkInstanceUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkInstanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkInstanceForbidden creates a UpdateEdgeNetworkInstanceForbidden with default headers values
func NewUpdateEdgeNetworkInstanceForbidden() *UpdateEdgeNetworkInstanceForbidden {
	return &UpdateEdgeNetworkInstanceForbidden{}
}

/* UpdateEdgeNetworkInstanceForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type UpdateEdgeNetworkInstanceForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkInstanceForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/netinsts/id/{id}][%d] updateEdgeNetworkInstanceForbidden  %+v", 403, o.Payload)
}
func (o *UpdateEdgeNetworkInstanceForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkInstanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkInstanceNotFound creates a UpdateEdgeNetworkInstanceNotFound with default headers values
func NewUpdateEdgeNetworkInstanceNotFound() *UpdateEdgeNetworkInstanceNotFound {
	return &UpdateEdgeNetworkInstanceNotFound{}
}

/* UpdateEdgeNetworkInstanceNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type UpdateEdgeNetworkInstanceNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkInstanceNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/netinsts/id/{id}][%d] updateEdgeNetworkInstanceNotFound  %+v", 404, o.Payload)
}
func (o *UpdateEdgeNetworkInstanceNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkInstanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkInstanceConflict creates a UpdateEdgeNetworkInstanceConflict with default headers values
func NewUpdateEdgeNetworkInstanceConflict() *UpdateEdgeNetworkInstanceConflict {
	return &UpdateEdgeNetworkInstanceConflict{}
}

/* UpdateEdgeNetworkInstanceConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.
*/
type UpdateEdgeNetworkInstanceConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkInstanceConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/netinsts/id/{id}][%d] updateEdgeNetworkInstanceConflict  %+v", 409, o.Payload)
}
func (o *UpdateEdgeNetworkInstanceConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkInstanceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkInstanceInternalServerError creates a UpdateEdgeNetworkInstanceInternalServerError with default headers values
func NewUpdateEdgeNetworkInstanceInternalServerError() *UpdateEdgeNetworkInstanceInternalServerError {
	return &UpdateEdgeNetworkInstanceInternalServerError{}
}

/* UpdateEdgeNetworkInstanceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type UpdateEdgeNetworkInstanceInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/netinsts/id/{id}][%d] updateEdgeNetworkInstanceInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateEdgeNetworkInstanceInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkInstanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEdgeNetworkInstanceGatewayTimeout creates a UpdateEdgeNetworkInstanceGatewayTimeout with default headers values
func NewUpdateEdgeNetworkInstanceGatewayTimeout() *UpdateEdgeNetworkInstanceGatewayTimeout {
	return &UpdateEdgeNetworkInstanceGatewayTimeout{}
}

/* UpdateEdgeNetworkInstanceGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type UpdateEdgeNetworkInstanceGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEdgeNetworkInstanceGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/netinsts/id/{id}][%d] updateEdgeNetworkInstanceGatewayTimeout  %+v", 504, o.Payload)
}
func (o *UpdateEdgeNetworkInstanceGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEdgeNetworkInstanceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

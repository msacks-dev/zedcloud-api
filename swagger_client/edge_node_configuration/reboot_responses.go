// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package edge_node_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// RebootReader is a Reader for the Reboot structure.
type RebootReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RebootReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRebootOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRebootUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRebootForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRebootNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRebootConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRebootInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewRebootGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRebootOK creates a RebootOK with default headers values
func NewRebootOK() *RebootOK {
	return &RebootOK{}
}

/* RebootOK describes a response with status code 200, with default header values.

A successful response.
*/
type RebootOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RebootOK) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/reboot][%d] rebootOK  %+v", 200, o.Payload)
}
func (o *RebootOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RebootOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRebootUnauthorized creates a RebootUnauthorized with default headers values
func NewRebootUnauthorized() *RebootUnauthorized {
	return &RebootUnauthorized{}
}

/* RebootUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type RebootUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RebootUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/reboot][%d] rebootUnauthorized  %+v", 401, o.Payload)
}
func (o *RebootUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RebootUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRebootForbidden creates a RebootForbidden with default headers values
func NewRebootForbidden() *RebootForbidden {
	return &RebootForbidden{}
}

/* RebootForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type RebootForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RebootForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/reboot][%d] rebootForbidden  %+v", 403, o.Payload)
}
func (o *RebootForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RebootForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRebootNotFound creates a RebootNotFound with default headers values
func NewRebootNotFound() *RebootNotFound {
	return &RebootNotFound{}
}

/* RebootNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type RebootNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RebootNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/reboot][%d] rebootNotFound  %+v", 404, o.Payload)
}
func (o *RebootNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RebootNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRebootConflict creates a RebootConflict with default headers values
func NewRebootConflict() *RebootConflict {
	return &RebootConflict{}
}

/* RebootConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge node record.
*/
type RebootConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RebootConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/reboot][%d] rebootConflict  %+v", 409, o.Payload)
}
func (o *RebootConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RebootConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRebootInternalServerError creates a RebootInternalServerError with default headers values
func NewRebootInternalServerError() *RebootInternalServerError {
	return &RebootInternalServerError{}
}

/* RebootInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type RebootInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RebootInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/reboot][%d] rebootInternalServerError  %+v", 500, o.Payload)
}
func (o *RebootInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RebootInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRebootGatewayTimeout creates a RebootGatewayTimeout with default headers values
func NewRebootGatewayTimeout() *RebootGatewayTimeout {
	return &RebootGatewayTimeout{}
}

/* RebootGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type RebootGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *RebootGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/reboot][%d] rebootGatewayTimeout  %+v", 504, o.Payload)
}
func (o *RebootGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *RebootGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

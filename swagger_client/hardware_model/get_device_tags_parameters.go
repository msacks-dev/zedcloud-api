// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package hardware_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetDeviceTagsParams creates a new GetDeviceTagsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDeviceTagsParams() *GetDeviceTagsParams {
	return &GetDeviceTagsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeviceTagsParamsWithTimeout creates a new GetDeviceTagsParams object
// with the ability to set a timeout on a request.
func NewGetDeviceTagsParamsWithTimeout(timeout time.Duration) *GetDeviceTagsParams {
	return &GetDeviceTagsParams{
		timeout: timeout,
	}
}

// NewGetDeviceTagsParamsWithContext creates a new GetDeviceTagsParams object
// with the ability to set a context for a request.
func NewGetDeviceTagsParamsWithContext(ctx context.Context) *GetDeviceTagsParams {
	return &GetDeviceTagsParams{
		Context: ctx,
	}
}

// NewGetDeviceTagsParamsWithHTTPClient creates a new GetDeviceTagsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDeviceTagsParamsWithHTTPClient(client *http.Client) *GetDeviceTagsParams {
	return &GetDeviceTagsParams{
		HTTPClient: client,
	}
}

/* GetDeviceTagsParams contains all the parameters to send to the API endpoint
   for the get device tags operation.

   Typically these are written to a http.Request.
*/
type GetDeviceTagsParams struct {

	/* XRequestID.

	   User-Agent specified id to track a request
	*/
	XRequestID *string

	/* FilterObjID.

	   Object Id which tags are associated.
	*/
	FilterObjID *string

	/* FilterObjName.

	   Object name which tags are associated.
	*/
	FilterObjName *string

	/* NextOrderBy.

	   OrderBy helps in sorting the list response
	*/
	NextOrderBy *string

	/* NextPageNum.

	   Page Number

	   Format: int64
	*/
	NextPageNum *int64

	/* NextPageSize.

	   Defines the page size

	   Format: int64
	*/
	NextPageSize *int64

	/* NextPageToken.

	   Page Token
	*/
	NextPageToken *string

	/* NextTotalPages.

	   Total number of pages to be fetched.

	   Format: int64
	*/
	NextTotalPages *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get device tags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDeviceTagsParams) WithDefaults() *GetDeviceTagsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get device tags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDeviceTagsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get device tags params
func (o *GetDeviceTagsParams) WithTimeout(timeout time.Duration) *GetDeviceTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get device tags params
func (o *GetDeviceTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get device tags params
func (o *GetDeviceTagsParams) WithContext(ctx context.Context) *GetDeviceTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get device tags params
func (o *GetDeviceTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get device tags params
func (o *GetDeviceTagsParams) WithHTTPClient(client *http.Client) *GetDeviceTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get device tags params
func (o *GetDeviceTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXRequestID adds the xRequestID to the get device tags params
func (o *GetDeviceTagsParams) WithXRequestID(xRequestID *string) *GetDeviceTagsParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the get device tags params
func (o *GetDeviceTagsParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithFilterObjID adds the filterObjID to the get device tags params
func (o *GetDeviceTagsParams) WithFilterObjID(filterObjID *string) *GetDeviceTagsParams {
	o.SetFilterObjID(filterObjID)
	return o
}

// SetFilterObjID adds the filterObjId to the get device tags params
func (o *GetDeviceTagsParams) SetFilterObjID(filterObjID *string) {
	o.FilterObjID = filterObjID
}

// WithFilterObjName adds the filterObjName to the get device tags params
func (o *GetDeviceTagsParams) WithFilterObjName(filterObjName *string) *GetDeviceTagsParams {
	o.SetFilterObjName(filterObjName)
	return o
}

// SetFilterObjName adds the filterObjName to the get device tags params
func (o *GetDeviceTagsParams) SetFilterObjName(filterObjName *string) {
	o.FilterObjName = filterObjName
}

// WithNextOrderBy adds the nextOrderBy to the get device tags params
func (o *GetDeviceTagsParams) WithNextOrderBy(nextOrderBy *string) *GetDeviceTagsParams {
	o.SetNextOrderBy(nextOrderBy)
	return o
}

// SetNextOrderBy adds the nextOrderBy to the get device tags params
func (o *GetDeviceTagsParams) SetNextOrderBy(nextOrderBy *string) {
	o.NextOrderBy = nextOrderBy
}

// WithNextPageNum adds the nextPageNum to the get device tags params
func (o *GetDeviceTagsParams) WithNextPageNum(nextPageNum *int64) *GetDeviceTagsParams {
	o.SetNextPageNum(nextPageNum)
	return o
}

// SetNextPageNum adds the nextPageNum to the get device tags params
func (o *GetDeviceTagsParams) SetNextPageNum(nextPageNum *int64) {
	o.NextPageNum = nextPageNum
}

// WithNextPageSize adds the nextPageSize to the get device tags params
func (o *GetDeviceTagsParams) WithNextPageSize(nextPageSize *int64) *GetDeviceTagsParams {
	o.SetNextPageSize(nextPageSize)
	return o
}

// SetNextPageSize adds the nextPageSize to the get device tags params
func (o *GetDeviceTagsParams) SetNextPageSize(nextPageSize *int64) {
	o.NextPageSize = nextPageSize
}

// WithNextPageToken adds the nextPageToken to the get device tags params
func (o *GetDeviceTagsParams) WithNextPageToken(nextPageToken *string) *GetDeviceTagsParams {
	o.SetNextPageToken(nextPageToken)
	return o
}

// SetNextPageToken adds the nextPageToken to the get device tags params
func (o *GetDeviceTagsParams) SetNextPageToken(nextPageToken *string) {
	o.NextPageToken = nextPageToken
}

// WithNextTotalPages adds the nextTotalPages to the get device tags params
func (o *GetDeviceTagsParams) WithNextTotalPages(nextTotalPages *int64) *GetDeviceTagsParams {
	o.SetNextTotalPages(nextTotalPages)
	return o
}

// SetNextTotalPages adds the nextTotalPages to the get device tags params
func (o *GetDeviceTagsParams) SetNextTotalPages(nextTotalPages *int64) {
	o.NextTotalPages = nextTotalPages
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeviceTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XRequestID != nil {

		// header param X-Request-Id
		if err := r.SetHeaderParam("X-Request-Id", *o.XRequestID); err != nil {
			return err
		}
	}

	if o.FilterObjID != nil {

		// query param filter.objId
		var qrFilterObjID string

		if o.FilterObjID != nil {
			qrFilterObjID = *o.FilterObjID
		}
		qFilterObjID := qrFilterObjID
		if qFilterObjID != "" {

			if err := r.SetQueryParam("filter.objId", qFilterObjID); err != nil {
				return err
			}
		}
	}

	if o.FilterObjName != nil {

		// query param filter.objName
		var qrFilterObjName string

		if o.FilterObjName != nil {
			qrFilterObjName = *o.FilterObjName
		}
		qFilterObjName := qrFilterObjName
		if qFilterObjName != "" {

			if err := r.SetQueryParam("filter.objName", qFilterObjName); err != nil {
				return err
			}
		}
	}

	if o.NextOrderBy != nil {

		// query param next.orderBy
		var qrNextOrderBy string

		if o.NextOrderBy != nil {
			qrNextOrderBy = *o.NextOrderBy
		}
		qNextOrderBy := qrNextOrderBy
		if qNextOrderBy != "" {

			if err := r.SetQueryParam("next.orderBy", qNextOrderBy); err != nil {
				return err
			}
		}
	}

	if o.NextPageNum != nil {

		// query param next.pageNum
		var qrNextPageNum int64

		if o.NextPageNum != nil {
			qrNextPageNum = *o.NextPageNum
		}
		qNextPageNum := swag.FormatInt64(qrNextPageNum)
		if qNextPageNum != "" {

			if err := r.SetQueryParam("next.pageNum", qNextPageNum); err != nil {
				return err
			}
		}
	}

	if o.NextPageSize != nil {

		// query param next.pageSize
		var qrNextPageSize int64

		if o.NextPageSize != nil {
			qrNextPageSize = *o.NextPageSize
		}
		qNextPageSize := swag.FormatInt64(qrNextPageSize)
		if qNextPageSize != "" {

			if err := r.SetQueryParam("next.pageSize", qNextPageSize); err != nil {
				return err
			}
		}
	}

	if o.NextPageToken != nil {

		// query param next.pageToken
		var qrNextPageToken string

		if o.NextPageToken != nil {
			qrNextPageToken = *o.NextPageToken
		}
		qNextPageToken := qrNextPageToken
		if qNextPageToken != "" {

			if err := r.SetQueryParam("next.pageToken", qNextPageToken); err != nil {
				return err
			}
		}
	}

	if o.NextTotalPages != nil {

		// query param next.totalPages
		var qrNextTotalPages int64

		if o.NextTotalPages != nil {
			qrNextTotalPages = *o.NextTotalPages
		}
		qNextTotalPages := swag.FormatInt64(qrNextTotalPages)
		if qNextTotalPages != "" {

			if err := r.SetQueryParam("next.totalPages", qNextTotalPages); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package hardware_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetDeviceTagsReader is a Reader for the GetDeviceTags structure.
type GetDeviceTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeviceTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDeviceTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDeviceTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDeviceTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDeviceTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetDeviceTagsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDeviceTagsOK creates a GetDeviceTagsOK with default headers values
func NewGetDeviceTagsOK() *GetDeviceTagsOK {
	return &GetDeviceTagsOK{}
}

/* GetDeviceTagsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetDeviceTagsOK struct {
	Payload *swagger_models.ObjectTagsList
}

func (o *GetDeviceTagsOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/tags][%d] getDeviceTagsOK  %+v", 200, o.Payload)
}
func (o *GetDeviceTagsOK) GetPayload() *swagger_models.ObjectTagsList {
	return o.Payload
}

func (o *GetDeviceTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ObjectTagsList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTagsBadRequest creates a GetDeviceTagsBadRequest with default headers values
func NewGetDeviceTagsBadRequest() *GetDeviceTagsBadRequest {
	return &GetDeviceTagsBadRequest{}
}

/* GetDeviceTagsBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type GetDeviceTagsBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTagsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/devices/tags][%d] getDeviceTagsBadRequest  %+v", 400, o.Payload)
}
func (o *GetDeviceTagsBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTagsUnauthorized creates a GetDeviceTagsUnauthorized with default headers values
func NewGetDeviceTagsUnauthorized() *GetDeviceTagsUnauthorized {
	return &GetDeviceTagsUnauthorized{}
}

/* GetDeviceTagsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetDeviceTagsUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTagsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/tags][%d] getDeviceTagsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDeviceTagsUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTagsForbidden creates a GetDeviceTagsForbidden with default headers values
func NewGetDeviceTagsForbidden() *GetDeviceTagsForbidden {
	return &GetDeviceTagsForbidden{}
}

/* GetDeviceTagsForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetDeviceTagsForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTagsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/tags][%d] getDeviceTagsForbidden  %+v", 403, o.Payload)
}
func (o *GetDeviceTagsForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTagsInternalServerError creates a GetDeviceTagsInternalServerError with default headers values
func NewGetDeviceTagsInternalServerError() *GetDeviceTagsInternalServerError {
	return &GetDeviceTagsInternalServerError{}
}

/* GetDeviceTagsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetDeviceTagsInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTagsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/tags][%d] getDeviceTagsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDeviceTagsInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceTagsGatewayTimeout creates a GetDeviceTagsGatewayTimeout with default headers values
func NewGetDeviceTagsGatewayTimeout() *GetDeviceTagsGatewayTimeout {
	return &GetDeviceTagsGatewayTimeout{}
}

/* GetDeviceTagsGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetDeviceTagsGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetDeviceTagsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/tags][%d] getDeviceTagsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetDeviceTagsGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceTagsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

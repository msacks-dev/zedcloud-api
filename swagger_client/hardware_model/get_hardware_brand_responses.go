// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package hardware_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetHardwareBrandReader is a Reader for the GetHardwareBrand structure.
type GetHardwareBrandReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHardwareBrandReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHardwareBrandOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetHardwareBrandUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetHardwareBrandForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetHardwareBrandNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHardwareBrandInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetHardwareBrandGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHardwareBrandOK creates a GetHardwareBrandOK with default headers values
func NewGetHardwareBrandOK() *GetHardwareBrandOK {
	return &GetHardwareBrandOK{}
}

/* GetHardwareBrandOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetHardwareBrandOK struct {
	Payload *swagger_models.SysBrand
}

func (o *GetHardwareBrandOK) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] getHardwareBrandOK  %+v", 200, o.Payload)
}
func (o *GetHardwareBrandOK) GetPayload() *swagger_models.SysBrand {
	return o.Payload
}

func (o *GetHardwareBrandOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.SysBrand)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHardwareBrandUnauthorized creates a GetHardwareBrandUnauthorized with default headers values
func NewGetHardwareBrandUnauthorized() *GetHardwareBrandUnauthorized {
	return &GetHardwareBrandUnauthorized{}
}

/* GetHardwareBrandUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetHardwareBrandUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetHardwareBrandUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] getHardwareBrandUnauthorized  %+v", 401, o.Payload)
}
func (o *GetHardwareBrandUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetHardwareBrandUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHardwareBrandForbidden creates a GetHardwareBrandForbidden with default headers values
func NewGetHardwareBrandForbidden() *GetHardwareBrandForbidden {
	return &GetHardwareBrandForbidden{}
}

/* GetHardwareBrandForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetHardwareBrandForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetHardwareBrandForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] getHardwareBrandForbidden  %+v", 403, o.Payload)
}
func (o *GetHardwareBrandForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetHardwareBrandForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHardwareBrandNotFound creates a GetHardwareBrandNotFound with default headers values
func NewGetHardwareBrandNotFound() *GetHardwareBrandNotFound {
	return &GetHardwareBrandNotFound{}
}

/* GetHardwareBrandNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetHardwareBrandNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetHardwareBrandNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] getHardwareBrandNotFound  %+v", 404, o.Payload)
}
func (o *GetHardwareBrandNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetHardwareBrandNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHardwareBrandInternalServerError creates a GetHardwareBrandInternalServerError with default headers values
func NewGetHardwareBrandInternalServerError() *GetHardwareBrandInternalServerError {
	return &GetHardwareBrandInternalServerError{}
}

/* GetHardwareBrandInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetHardwareBrandInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetHardwareBrandInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] getHardwareBrandInternalServerError  %+v", 500, o.Payload)
}
func (o *GetHardwareBrandInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetHardwareBrandInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHardwareBrandGatewayTimeout creates a GetHardwareBrandGatewayTimeout with default headers values
func NewGetHardwareBrandGatewayTimeout() *GetHardwareBrandGatewayTimeout {
	return &GetHardwareBrandGatewayTimeout{}
}

/* GetHardwareBrandGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetHardwareBrandGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetHardwareBrandGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/brands/id/{id}][%d] getHardwareBrandGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetHardwareBrandGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetHardwareBrandGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

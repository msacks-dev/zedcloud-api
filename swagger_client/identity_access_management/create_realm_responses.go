// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// CreateRealmReader is a Reader for the CreateRealm structure.
type CreateRealmReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRealmReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRealmOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateRealmBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateRealmUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRealmForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateRealmConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateRealmInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewCreateRealmGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRealmOK creates a CreateRealmOK with default headers values
func NewCreateRealmOK() *CreateRealmOK {
	return &CreateRealmOK{}
}

/* CreateRealmOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateRealmOK struct {
	Payload *swagger_models.CrudResponse
}

func (o *CreateRealmOK) Error() string {
	return fmt.Sprintf("[POST /v1/realms][%d] createRealmOK  %+v", 200, o.Payload)
}
func (o *CreateRealmOK) GetPayload() *swagger_models.CrudResponse {
	return o.Payload
}

func (o *CreateRealmOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.CrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRealmBadRequest creates a CreateRealmBadRequest with default headers values
func NewCreateRealmBadRequest() *CreateRealmBadRequest {
	return &CreateRealmBadRequest{}
}

/* CreateRealmBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type CreateRealmBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateRealmBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/realms][%d] createRealmBadRequest  %+v", 400, o.Payload)
}
func (o *CreateRealmBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateRealmBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRealmUnauthorized creates a CreateRealmUnauthorized with default headers values
func NewCreateRealmUnauthorized() *CreateRealmUnauthorized {
	return &CreateRealmUnauthorized{}
}

/* CreateRealmUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type CreateRealmUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateRealmUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/realms][%d] createRealmUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateRealmUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateRealmUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRealmForbidden creates a CreateRealmForbidden with default headers values
func NewCreateRealmForbidden() *CreateRealmForbidden {
	return &CreateRealmForbidden{}
}

/* CreateRealmForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type CreateRealmForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateRealmForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/realms][%d] createRealmForbidden  %+v", 403, o.Payload)
}
func (o *CreateRealmForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateRealmForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRealmConflict creates a CreateRealmConflict with default headers values
func NewCreateRealmConflict() *CreateRealmConflict {
	return &CreateRealmConflict{}
}

/* CreateRealmConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this realm will conflict with an already existing realm.
*/
type CreateRealmConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateRealmConflict) Error() string {
	return fmt.Sprintf("[POST /v1/realms][%d] createRealmConflict  %+v", 409, o.Payload)
}
func (o *CreateRealmConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateRealmConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRealmInternalServerError creates a CreateRealmInternalServerError with default headers values
func NewCreateRealmInternalServerError() *CreateRealmInternalServerError {
	return &CreateRealmInternalServerError{}
}

/* CreateRealmInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type CreateRealmInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateRealmInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/realms][%d] createRealmInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateRealmInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateRealmInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRealmGatewayTimeout creates a CreateRealmGatewayTimeout with default headers values
func NewCreateRealmGatewayTimeout() *CreateRealmGatewayTimeout {
	return &CreateRealmGatewayTimeout{}
}

/* CreateRealmGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type CreateRealmGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateRealmGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/realms][%d] createRealmGatewayTimeout  %+v", 504, o.Payload)
}
func (o *CreateRealmGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateRealmGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

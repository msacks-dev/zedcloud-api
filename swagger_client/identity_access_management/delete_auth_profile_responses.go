// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// DeleteAuthProfileReader is a Reader for the DeleteAuthProfile structure.
type DeleteAuthProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAuthProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAuthProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteAuthProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAuthProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAuthProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAuthProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteAuthProfileGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAuthProfileOK creates a DeleteAuthProfileOK with default headers values
func NewDeleteAuthProfileOK() *DeleteAuthProfileOK {
	return &DeleteAuthProfileOK{}
}

/* DeleteAuthProfileOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteAuthProfileOK struct {
	Payload *swagger_models.CrudResponse
}

func (o *DeleteAuthProfileOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] deleteAuthProfileOK  %+v", 200, o.Payload)
}
func (o *DeleteAuthProfileOK) GetPayload() *swagger_models.CrudResponse {
	return o.Payload
}

func (o *DeleteAuthProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.CrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthProfileUnauthorized creates a DeleteAuthProfileUnauthorized with default headers values
func NewDeleteAuthProfileUnauthorized() *DeleteAuthProfileUnauthorized {
	return &DeleteAuthProfileUnauthorized{}
}

/* DeleteAuthProfileUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type DeleteAuthProfileUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteAuthProfileUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] deleteAuthProfileUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteAuthProfileUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteAuthProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthProfileForbidden creates a DeleteAuthProfileForbidden with default headers values
func NewDeleteAuthProfileForbidden() *DeleteAuthProfileForbidden {
	return &DeleteAuthProfileForbidden{}
}

/* DeleteAuthProfileForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type DeleteAuthProfileForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteAuthProfileForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] deleteAuthProfileForbidden  %+v", 403, o.Payload)
}
func (o *DeleteAuthProfileForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteAuthProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthProfileNotFound creates a DeleteAuthProfileNotFound with default headers values
func NewDeleteAuthProfileNotFound() *DeleteAuthProfileNotFound {
	return &DeleteAuthProfileNotFound{}
}

/* DeleteAuthProfileNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type DeleteAuthProfileNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteAuthProfileNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] deleteAuthProfileNotFound  %+v", 404, o.Payload)
}
func (o *DeleteAuthProfileNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteAuthProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthProfileInternalServerError creates a DeleteAuthProfileInternalServerError with default headers values
func NewDeleteAuthProfileInternalServerError() *DeleteAuthProfileInternalServerError {
	return &DeleteAuthProfileInternalServerError{}
}

/* DeleteAuthProfileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type DeleteAuthProfileInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteAuthProfileInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] deleteAuthProfileInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteAuthProfileInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteAuthProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthProfileGatewayTimeout creates a DeleteAuthProfileGatewayTimeout with default headers values
func NewDeleteAuthProfileGatewayTimeout() *DeleteAuthProfileGatewayTimeout {
	return &DeleteAuthProfileGatewayTimeout{}
}

/* DeleteAuthProfileGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type DeleteAuthProfileGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteAuthProfileGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/authorization/profiles/id/{id}][%d] deleteAuthProfileGatewayTimeout  %+v", 504, o.Payload)
}
func (o *DeleteAuthProfileGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteAuthProfileGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// DeleteCredentialReader is a Reader for the DeleteCredential structure.
type DeleteCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteCredentialUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCredentialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCredentialNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteCredentialGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCredentialOK creates a DeleteCredentialOK with default headers values
func NewDeleteCredentialOK() *DeleteCredentialOK {
	return &DeleteCredentialOK{}
}

/* DeleteCredentialOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteCredentialOK struct {
	Payload *swagger_models.CrudResponse
}

func (o *DeleteCredentialOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] deleteCredentialOK  %+v", 200, o.Payload)
}
func (o *DeleteCredentialOK) GetPayload() *swagger_models.CrudResponse {
	return o.Payload
}

func (o *DeleteCredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.CrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCredentialUnauthorized creates a DeleteCredentialUnauthorized with default headers values
func NewDeleteCredentialUnauthorized() *DeleteCredentialUnauthorized {
	return &DeleteCredentialUnauthorized{}
}

/* DeleteCredentialUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type DeleteCredentialUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteCredentialUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] deleteCredentialUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteCredentialUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteCredentialUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCredentialForbidden creates a DeleteCredentialForbidden with default headers values
func NewDeleteCredentialForbidden() *DeleteCredentialForbidden {
	return &DeleteCredentialForbidden{}
}

/* DeleteCredentialForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type DeleteCredentialForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteCredentialForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] deleteCredentialForbidden  %+v", 403, o.Payload)
}
func (o *DeleteCredentialForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteCredentialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCredentialNotFound creates a DeleteCredentialNotFound with default headers values
func NewDeleteCredentialNotFound() *DeleteCredentialNotFound {
	return &DeleteCredentialNotFound{}
}

/* DeleteCredentialNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type DeleteCredentialNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteCredentialNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] deleteCredentialNotFound  %+v", 404, o.Payload)
}
func (o *DeleteCredentialNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteCredentialNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCredentialInternalServerError creates a DeleteCredentialInternalServerError with default headers values
func NewDeleteCredentialInternalServerError() *DeleteCredentialInternalServerError {
	return &DeleteCredentialInternalServerError{}
}

/* DeleteCredentialInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type DeleteCredentialInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteCredentialInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] deleteCredentialInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteCredentialInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteCredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCredentialGatewayTimeout creates a DeleteCredentialGatewayTimeout with default headers values
func NewDeleteCredentialGatewayTimeout() *DeleteCredentialGatewayTimeout {
	return &DeleteCredentialGatewayTimeout{}
}

/* DeleteCredentialGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type DeleteCredentialGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *DeleteCredentialGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] deleteCredentialGatewayTimeout  %+v", 504, o.Payload)
}
func (o *DeleteCredentialGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteCredentialGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

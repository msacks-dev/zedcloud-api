// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetRealmByNameReader is a Reader for the GetRealmByName structure.
type GetRealmByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRealmByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRealmByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRealmByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRealmByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRealmByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRealmByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetRealmByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRealmByNameOK creates a GetRealmByNameOK with default headers values
func NewGetRealmByNameOK() *GetRealmByNameOK {
	return &GetRealmByNameOK{}
}

/* GetRealmByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetRealmByNameOK struct {
	Payload *swagger_models.CrudResponseRead
}

func (o *GetRealmByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/realms/name/{name}][%d] getRealmByNameOK  %+v", 200, o.Payload)
}
func (o *GetRealmByNameOK) GetPayload() *swagger_models.CrudResponseRead {
	return o.Payload
}

func (o *GetRealmByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.CrudResponseRead)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRealmByNameUnauthorized creates a GetRealmByNameUnauthorized with default headers values
func NewGetRealmByNameUnauthorized() *GetRealmByNameUnauthorized {
	return &GetRealmByNameUnauthorized{}
}

/* GetRealmByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetRealmByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetRealmByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/realms/name/{name}][%d] getRealmByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetRealmByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetRealmByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRealmByNameForbidden creates a GetRealmByNameForbidden with default headers values
func NewGetRealmByNameForbidden() *GetRealmByNameForbidden {
	return &GetRealmByNameForbidden{}
}

/* GetRealmByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetRealmByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetRealmByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/realms/name/{name}][%d] getRealmByNameForbidden  %+v", 403, o.Payload)
}
func (o *GetRealmByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetRealmByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRealmByNameNotFound creates a GetRealmByNameNotFound with default headers values
func NewGetRealmByNameNotFound() *GetRealmByNameNotFound {
	return &GetRealmByNameNotFound{}
}

/* GetRealmByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetRealmByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetRealmByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/realms/name/{name}][%d] getRealmByNameNotFound  %+v", 404, o.Payload)
}
func (o *GetRealmByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetRealmByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRealmByNameInternalServerError creates a GetRealmByNameInternalServerError with default headers values
func NewGetRealmByNameInternalServerError() *GetRealmByNameInternalServerError {
	return &GetRealmByNameInternalServerError{}
}

/* GetRealmByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetRealmByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetRealmByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/realms/name/{name}][%d] getRealmByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetRealmByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetRealmByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRealmByNameGatewayTimeout creates a GetRealmByNameGatewayTimeout with default headers values
func NewGetRealmByNameGatewayTimeout() *GetRealmByNameGatewayTimeout {
	return &GetRealmByNameGatewayTimeout{}
}

/* GetRealmByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetRealmByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetRealmByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/realms/name/{name}][%d] getRealmByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetRealmByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetRealmByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

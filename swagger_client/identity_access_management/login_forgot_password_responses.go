// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// LoginForgotPasswordReader is a Reader for the LoginForgotPassword structure.
type LoginForgotPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoginForgotPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoginForgotPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLoginForgotPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoginForgotPasswordForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLoginForgotPasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewLoginForgotPasswordGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLoginForgotPasswordOK creates a LoginForgotPasswordOK with default headers values
func NewLoginForgotPasswordOK() *LoginForgotPasswordOK {
	return &LoginForgotPasswordOK{}
}

/* LoginForgotPasswordOK describes a response with status code 200, with default header values.

A successful response.
*/
type LoginForgotPasswordOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *LoginForgotPasswordOK) Error() string {
	return fmt.Sprintf("[POST /v1/login/forgot][%d] loginForgotPasswordOK  %+v", 200, o.Payload)
}
func (o *LoginForgotPasswordOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *LoginForgotPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginForgotPasswordUnauthorized creates a LoginForgotPasswordUnauthorized with default headers values
func NewLoginForgotPasswordUnauthorized() *LoginForgotPasswordUnauthorized {
	return &LoginForgotPasswordUnauthorized{}
}

/* LoginForgotPasswordUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type LoginForgotPasswordUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *LoginForgotPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/login/forgot][%d] loginForgotPasswordUnauthorized  %+v", 401, o.Payload)
}
func (o *LoginForgotPasswordUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *LoginForgotPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginForgotPasswordForbidden creates a LoginForgotPasswordForbidden with default headers values
func NewLoginForgotPasswordForbidden() *LoginForgotPasswordForbidden {
	return &LoginForgotPasswordForbidden{}
}

/* LoginForgotPasswordForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type LoginForgotPasswordForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *LoginForgotPasswordForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/login/forgot][%d] loginForgotPasswordForbidden  %+v", 403, o.Payload)
}
func (o *LoginForgotPasswordForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *LoginForgotPasswordForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginForgotPasswordInternalServerError creates a LoginForgotPasswordInternalServerError with default headers values
func NewLoginForgotPasswordInternalServerError() *LoginForgotPasswordInternalServerError {
	return &LoginForgotPasswordInternalServerError{}
}

/* LoginForgotPasswordInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type LoginForgotPasswordInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *LoginForgotPasswordInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/login/forgot][%d] loginForgotPasswordInternalServerError  %+v", 500, o.Payload)
}
func (o *LoginForgotPasswordInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *LoginForgotPasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginForgotPasswordGatewayTimeout creates a LoginForgotPasswordGatewayTimeout with default headers values
func NewLoginForgotPasswordGatewayTimeout() *LoginForgotPasswordGatewayTimeout {
	return &LoginForgotPasswordGatewayTimeout{}
}

/* LoginForgotPasswordGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type LoginForgotPasswordGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *LoginForgotPasswordGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/login/forgot][%d] loginForgotPasswordGatewayTimeout  %+v", 504, o.Payload)
}
func (o *LoginForgotPasswordGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *LoginForgotPasswordGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

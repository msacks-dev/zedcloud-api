// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// UpdateEnterprise2Reader is a Reader for the UpdateEnterprise2 structure.
type UpdateEnterprise2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEnterprise2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEnterprise2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateEnterprise2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateEnterprise2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateEnterprise2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateEnterprise2Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateEnterprise2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewUpdateEnterprise2GatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateEnterprise2OK creates a UpdateEnterprise2OK with default headers values
func NewUpdateEnterprise2OK() *UpdateEnterprise2OK {
	return &UpdateEnterprise2OK{}
}

/* UpdateEnterprise2OK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateEnterprise2OK struct {
	Payload *swagger_models.CrudResponse
}

func (o *UpdateEnterprise2OK) Error() string {
	return fmt.Sprintf("[PUT /v1/enterprises/id/{id}][%d] updateEnterprise2OK  %+v", 200, o.Payload)
}
func (o *UpdateEnterprise2OK) GetPayload() *swagger_models.CrudResponse {
	return o.Payload
}

func (o *UpdateEnterprise2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.CrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnterprise2Unauthorized creates a UpdateEnterprise2Unauthorized with default headers values
func NewUpdateEnterprise2Unauthorized() *UpdateEnterprise2Unauthorized {
	return &UpdateEnterprise2Unauthorized{}
}

/* UpdateEnterprise2Unauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type UpdateEnterprise2Unauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEnterprise2Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/enterprises/id/{id}][%d] updateEnterprise2Unauthorized  %+v", 401, o.Payload)
}
func (o *UpdateEnterprise2Unauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEnterprise2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnterprise2Forbidden creates a UpdateEnterprise2Forbidden with default headers values
func NewUpdateEnterprise2Forbidden() *UpdateEnterprise2Forbidden {
	return &UpdateEnterprise2Forbidden{}
}

/* UpdateEnterprise2Forbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type UpdateEnterprise2Forbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEnterprise2Forbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/enterprises/id/{id}][%d] updateEnterprise2Forbidden  %+v", 403, o.Payload)
}
func (o *UpdateEnterprise2Forbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEnterprise2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnterprise2NotFound creates a UpdateEnterprise2NotFound with default headers values
func NewUpdateEnterprise2NotFound() *UpdateEnterprise2NotFound {
	return &UpdateEnterprise2NotFound{}
}

/* UpdateEnterprise2NotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type UpdateEnterprise2NotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEnterprise2NotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/enterprises/id/{id}][%d] updateEnterprise2NotFound  %+v", 404, o.Payload)
}
func (o *UpdateEnterprise2NotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEnterprise2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnterprise2Conflict creates a UpdateEnterprise2Conflict with default headers values
func NewUpdateEnterprise2Conflict() *UpdateEnterprise2Conflict {
	return &UpdateEnterprise2Conflict{}
}

/* UpdateEnterprise2Conflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing enterprise record.
*/
type UpdateEnterprise2Conflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEnterprise2Conflict) Error() string {
	return fmt.Sprintf("[PUT /v1/enterprises/id/{id}][%d] updateEnterprise2Conflict  %+v", 409, o.Payload)
}
func (o *UpdateEnterprise2Conflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEnterprise2Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnterprise2InternalServerError creates a UpdateEnterprise2InternalServerError with default headers values
func NewUpdateEnterprise2InternalServerError() *UpdateEnterprise2InternalServerError {
	return &UpdateEnterprise2InternalServerError{}
}

/* UpdateEnterprise2InternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type UpdateEnterprise2InternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEnterprise2InternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/enterprises/id/{id}][%d] updateEnterprise2InternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateEnterprise2InternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEnterprise2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnterprise2GatewayTimeout creates a UpdateEnterprise2GatewayTimeout with default headers values
func NewUpdateEnterprise2GatewayTimeout() *UpdateEnterprise2GatewayTimeout {
	return &UpdateEnterprise2GatewayTimeout{}
}

/* UpdateEnterprise2GatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type UpdateEnterprise2GatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *UpdateEnterprise2GatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/enterprises/id/{id}][%d] updateEnterprise2GatewayTimeout  %+v", 504, o.Payload)
}
func (o *UpdateEnterprise2GatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *UpdateEnterprise2GatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

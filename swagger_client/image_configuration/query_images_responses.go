// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package image_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// QueryImagesReader is a Reader for the QueryImages structure.
type QueryImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewQueryImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewQueryImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewQueryImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewQueryImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewQueryImagesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewQueryImagesOK creates a QueryImagesOK with default headers values
func NewQueryImagesOK() *QueryImagesOK {
	return &QueryImagesOK{}
}

/* QueryImagesOK describes a response with status code 200, with default header values.

A successful response.
*/
type QueryImagesOK struct {
	Payload *swagger_models.Images
}

func (o *QueryImagesOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images][%d] queryImagesOK  %+v", 200, o.Payload)
}
func (o *QueryImagesOK) GetPayload() *swagger_models.Images {
	return o.Payload
}

func (o *QueryImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.Images)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryImagesBadRequest creates a QueryImagesBadRequest with default headers values
func NewQueryImagesBadRequest() *QueryImagesBadRequest {
	return &QueryImagesBadRequest{}
}

/* QueryImagesBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type QueryImagesBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images][%d] queryImagesBadRequest  %+v", 400, o.Payload)
}
func (o *QueryImagesBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryImagesUnauthorized creates a QueryImagesUnauthorized with default headers values
func NewQueryImagesUnauthorized() *QueryImagesUnauthorized {
	return &QueryImagesUnauthorized{}
}

/* QueryImagesUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type QueryImagesUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images][%d] queryImagesUnauthorized  %+v", 401, o.Payload)
}
func (o *QueryImagesUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryImagesForbidden creates a QueryImagesForbidden with default headers values
func NewQueryImagesForbidden() *QueryImagesForbidden {
	return &QueryImagesForbidden{}
}

/* QueryImagesForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type QueryImagesForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images][%d] queryImagesForbidden  %+v", 403, o.Payload)
}
func (o *QueryImagesForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryImagesInternalServerError creates a QueryImagesInternalServerError with default headers values
func NewQueryImagesInternalServerError() *QueryImagesInternalServerError {
	return &QueryImagesInternalServerError{}
}

/* QueryImagesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type QueryImagesInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryImagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images][%d] queryImagesInternalServerError  %+v", 500, o.Payload)
}
func (o *QueryImagesInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryImagesGatewayTimeout creates a QueryImagesGatewayTimeout with default headers values
func NewQueryImagesGatewayTimeout() *QueryImagesGatewayTimeout {
	return &QueryImagesGatewayTimeout{}
}

/* QueryImagesGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type QueryImagesGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *QueryImagesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/apps/images][%d] queryImagesGatewayTimeout  %+v", 504, o.Payload)
}
func (o *QueryImagesGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *QueryImagesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

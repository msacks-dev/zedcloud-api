// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package resource_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetResourceGroupResourceMetricsByIDReader is a Reader for the GetResourceGroupResourceMetricsByID structure.
type GetResourceGroupResourceMetricsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceGroupResourceMetricsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceGroupResourceMetricsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceGroupResourceMetricsByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceGroupResourceMetricsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceGroupResourceMetricsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceGroupResourceMetricsByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetResourceGroupResourceMetricsByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetResourceGroupResourceMetricsByIDOK creates a GetResourceGroupResourceMetricsByIDOK with default headers values
func NewGetResourceGroupResourceMetricsByIDOK() *GetResourceGroupResourceMetricsByIDOK {
	return &GetResourceGroupResourceMetricsByIDOK{}
}

/* GetResourceGroupResourceMetricsByIDOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetResourceGroupResourceMetricsByIDOK struct {
	Payload *swagger_models.MetricQueryResponse
}

func (o *GetResourceGroupResourceMetricsByIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/projects/id/{objid}/timeSeries/{mType}][%d] getResourceGroupResourceMetricsByIdOK  %+v", 200, o.Payload)
}
func (o *GetResourceGroupResourceMetricsByIDOK) GetPayload() *swagger_models.MetricQueryResponse {
	return o.Payload
}

func (o *GetResourceGroupResourceMetricsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.MetricQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupResourceMetricsByIDUnauthorized creates a GetResourceGroupResourceMetricsByIDUnauthorized with default headers values
func NewGetResourceGroupResourceMetricsByIDUnauthorized() *GetResourceGroupResourceMetricsByIDUnauthorized {
	return &GetResourceGroupResourceMetricsByIDUnauthorized{}
}

/* GetResourceGroupResourceMetricsByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetResourceGroupResourceMetricsByIDUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetResourceGroupResourceMetricsByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/projects/id/{objid}/timeSeries/{mType}][%d] getResourceGroupResourceMetricsByIdUnauthorized  %+v", 401, o.Payload)
}
func (o *GetResourceGroupResourceMetricsByIDUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetResourceGroupResourceMetricsByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupResourceMetricsByIDForbidden creates a GetResourceGroupResourceMetricsByIDForbidden with default headers values
func NewGetResourceGroupResourceMetricsByIDForbidden() *GetResourceGroupResourceMetricsByIDForbidden {
	return &GetResourceGroupResourceMetricsByIDForbidden{}
}

/* GetResourceGroupResourceMetricsByIDForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetResourceGroupResourceMetricsByIDForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetResourceGroupResourceMetricsByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/projects/id/{objid}/timeSeries/{mType}][%d] getResourceGroupResourceMetricsByIdForbidden  %+v", 403, o.Payload)
}
func (o *GetResourceGroupResourceMetricsByIDForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetResourceGroupResourceMetricsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupResourceMetricsByIDNotFound creates a GetResourceGroupResourceMetricsByIDNotFound with default headers values
func NewGetResourceGroupResourceMetricsByIDNotFound() *GetResourceGroupResourceMetricsByIDNotFound {
	return &GetResourceGroupResourceMetricsByIDNotFound{}
}

/* GetResourceGroupResourceMetricsByIDNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetResourceGroupResourceMetricsByIDNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetResourceGroupResourceMetricsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/projects/id/{objid}/timeSeries/{mType}][%d] getResourceGroupResourceMetricsByIdNotFound  %+v", 404, o.Payload)
}
func (o *GetResourceGroupResourceMetricsByIDNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetResourceGroupResourceMetricsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupResourceMetricsByIDInternalServerError creates a GetResourceGroupResourceMetricsByIDInternalServerError with default headers values
func NewGetResourceGroupResourceMetricsByIDInternalServerError() *GetResourceGroupResourceMetricsByIDInternalServerError {
	return &GetResourceGroupResourceMetricsByIDInternalServerError{}
}

/* GetResourceGroupResourceMetricsByIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetResourceGroupResourceMetricsByIDInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetResourceGroupResourceMetricsByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/projects/id/{objid}/timeSeries/{mType}][%d] getResourceGroupResourceMetricsByIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetResourceGroupResourceMetricsByIDInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetResourceGroupResourceMetricsByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupResourceMetricsByIDGatewayTimeout creates a GetResourceGroupResourceMetricsByIDGatewayTimeout with default headers values
func NewGetResourceGroupResourceMetricsByIDGatewayTimeout() *GetResourceGroupResourceMetricsByIDGatewayTimeout {
	return &GetResourceGroupResourceMetricsByIDGatewayTimeout{}
}

/* GetResourceGroupResourceMetricsByIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetResourceGroupResourceMetricsByIDGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetResourceGroupResourceMetricsByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/projects/id/{objid}/timeSeries/{mType}][%d] getResourceGroupResourceMetricsByIdGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetResourceGroupResourceMetricsByIDGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetResourceGroupResourceMetricsByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package volume_instance_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// CreateVolumeInstanceReader is a Reader for the CreateVolumeInstance structure.
type CreateVolumeInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVolumeInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateVolumeInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateVolumeInstanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateVolumeInstanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateVolumeInstanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateVolumeInstanceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateVolumeInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewCreateVolumeInstanceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateVolumeInstanceOK creates a CreateVolumeInstanceOK with default headers values
func NewCreateVolumeInstanceOK() *CreateVolumeInstanceOK {
	return &CreateVolumeInstanceOK{}
}

/* CreateVolumeInstanceOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateVolumeInstanceOK struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateVolumeInstanceOK) Error() string {
	return fmt.Sprintf("[POST /v1/volumes/instances][%d] createVolumeInstanceOK  %+v", 200, o.Payload)
}
func (o *CreateVolumeInstanceOK) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateVolumeInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeInstanceBadRequest creates a CreateVolumeInstanceBadRequest with default headers values
func NewCreateVolumeInstanceBadRequest() *CreateVolumeInstanceBadRequest {
	return &CreateVolumeInstanceBadRequest{}
}

/* CreateVolumeInstanceBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type CreateVolumeInstanceBadRequest struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateVolumeInstanceBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/volumes/instances][%d] createVolumeInstanceBadRequest  %+v", 400, o.Payload)
}
func (o *CreateVolumeInstanceBadRequest) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateVolumeInstanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeInstanceUnauthorized creates a CreateVolumeInstanceUnauthorized with default headers values
func NewCreateVolumeInstanceUnauthorized() *CreateVolumeInstanceUnauthorized {
	return &CreateVolumeInstanceUnauthorized{}
}

/* CreateVolumeInstanceUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type CreateVolumeInstanceUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateVolumeInstanceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/volumes/instances][%d] createVolumeInstanceUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateVolumeInstanceUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateVolumeInstanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeInstanceForbidden creates a CreateVolumeInstanceForbidden with default headers values
func NewCreateVolumeInstanceForbidden() *CreateVolumeInstanceForbidden {
	return &CreateVolumeInstanceForbidden{}
}

/* CreateVolumeInstanceForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type CreateVolumeInstanceForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateVolumeInstanceForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/volumes/instances][%d] createVolumeInstanceForbidden  %+v", 403, o.Payload)
}
func (o *CreateVolumeInstanceForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateVolumeInstanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeInstanceConflict creates a CreateVolumeInstanceConflict with default headers values
func NewCreateVolumeInstanceConflict() *CreateVolumeInstanceConflict {
	return &CreateVolumeInstanceConflict{}
}

/* CreateVolumeInstanceConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this edge volume instance record will conflict with an already existing edge volume instance record.
*/
type CreateVolumeInstanceConflict struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateVolumeInstanceConflict) Error() string {
	return fmt.Sprintf("[POST /v1/volumes/instances][%d] createVolumeInstanceConflict  %+v", 409, o.Payload)
}
func (o *CreateVolumeInstanceConflict) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateVolumeInstanceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeInstanceInternalServerError creates a CreateVolumeInstanceInternalServerError with default headers values
func NewCreateVolumeInstanceInternalServerError() *CreateVolumeInstanceInternalServerError {
	return &CreateVolumeInstanceInternalServerError{}
}

/* CreateVolumeInstanceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type CreateVolumeInstanceInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateVolumeInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/volumes/instances][%d] createVolumeInstanceInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateVolumeInstanceInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateVolumeInstanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeInstanceGatewayTimeout creates a CreateVolumeInstanceGatewayTimeout with default headers values
func NewCreateVolumeInstanceGatewayTimeout() *CreateVolumeInstanceGatewayTimeout {
	return &CreateVolumeInstanceGatewayTimeout{}
}

/* CreateVolumeInstanceGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type CreateVolumeInstanceGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *CreateVolumeInstanceGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/volumes/instances][%d] createVolumeInstanceGatewayTimeout  %+v", 504, o.Payload)
}
func (o *CreateVolumeInstanceGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *CreateVolumeInstanceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

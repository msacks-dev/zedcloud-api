// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by go-swagger; DO NOT EDIT.

package volume_instance_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/zedcloud-api/swagger_models"
)

// GetVolumeInstanceEventsByNameReader is a Reader for the GetVolumeInstanceEventsByName structure.
type GetVolumeInstanceEventsByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVolumeInstanceEventsByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVolumeInstanceEventsByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVolumeInstanceEventsByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVolumeInstanceEventsByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVolumeInstanceEventsByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVolumeInstanceEventsByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetVolumeInstanceEventsByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVolumeInstanceEventsByNameOK creates a GetVolumeInstanceEventsByNameOK with default headers values
func NewGetVolumeInstanceEventsByNameOK() *GetVolumeInstanceEventsByNameOK {
	return &GetVolumeInstanceEventsByNameOK{}
}

/* GetVolumeInstanceEventsByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetVolumeInstanceEventsByNameOK struct {
	Payload *swagger_models.EventQueryResponse
}

func (o *GetVolumeInstanceEventsByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{objname}/events][%d] getVolumeInstanceEventsByNameOK  %+v", 200, o.Payload)
}
func (o *GetVolumeInstanceEventsByNameOK) GetPayload() *swagger_models.EventQueryResponse {
	return o.Payload
}

func (o *GetVolumeInstanceEventsByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.EventQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeInstanceEventsByNameUnauthorized creates a GetVolumeInstanceEventsByNameUnauthorized with default headers values
func NewGetVolumeInstanceEventsByNameUnauthorized() *GetVolumeInstanceEventsByNameUnauthorized {
	return &GetVolumeInstanceEventsByNameUnauthorized{}
}

/* GetVolumeInstanceEventsByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetVolumeInstanceEventsByNameUnauthorized struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetVolumeInstanceEventsByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{objname}/events][%d] getVolumeInstanceEventsByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetVolumeInstanceEventsByNameUnauthorized) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetVolumeInstanceEventsByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeInstanceEventsByNameForbidden creates a GetVolumeInstanceEventsByNameForbidden with default headers values
func NewGetVolumeInstanceEventsByNameForbidden() *GetVolumeInstanceEventsByNameForbidden {
	return &GetVolumeInstanceEventsByNameForbidden{}
}

/* GetVolumeInstanceEventsByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetVolumeInstanceEventsByNameForbidden struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetVolumeInstanceEventsByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{objname}/events][%d] getVolumeInstanceEventsByNameForbidden  %+v", 403, o.Payload)
}
func (o *GetVolumeInstanceEventsByNameForbidden) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetVolumeInstanceEventsByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeInstanceEventsByNameNotFound creates a GetVolumeInstanceEventsByNameNotFound with default headers values
func NewGetVolumeInstanceEventsByNameNotFound() *GetVolumeInstanceEventsByNameNotFound {
	return &GetVolumeInstanceEventsByNameNotFound{}
}

/* GetVolumeInstanceEventsByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetVolumeInstanceEventsByNameNotFound struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetVolumeInstanceEventsByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{objname}/events][%d] getVolumeInstanceEventsByNameNotFound  %+v", 404, o.Payload)
}
func (o *GetVolumeInstanceEventsByNameNotFound) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetVolumeInstanceEventsByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeInstanceEventsByNameInternalServerError creates a GetVolumeInstanceEventsByNameInternalServerError with default headers values
func NewGetVolumeInstanceEventsByNameInternalServerError() *GetVolumeInstanceEventsByNameInternalServerError {
	return &GetVolumeInstanceEventsByNameInternalServerError{}
}

/* GetVolumeInstanceEventsByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetVolumeInstanceEventsByNameInternalServerError struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetVolumeInstanceEventsByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{objname}/events][%d] getVolumeInstanceEventsByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVolumeInstanceEventsByNameInternalServerError) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetVolumeInstanceEventsByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeInstanceEventsByNameGatewayTimeout creates a GetVolumeInstanceEventsByNameGatewayTimeout with default headers values
func NewGetVolumeInstanceEventsByNameGatewayTimeout() *GetVolumeInstanceEventsByNameGatewayTimeout {
	return &GetVolumeInstanceEventsByNameGatewayTimeout{}
}

/* GetVolumeInstanceEventsByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetVolumeInstanceEventsByNameGatewayTimeout struct {
	Payload *swagger_models.ZsrvResponse
}

func (o *GetVolumeInstanceEventsByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/volumes/instances/name/{objname}/events][%d] getVolumeInstanceEventsByNameGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetVolumeInstanceEventsByNameGatewayTimeout) GetPayload() *swagger_models.ZsrvResponse {
	return o.Payload
}

func (o *GetVolumeInstanceEventsByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
